{ "deck_data": "{ \"background_color\": 4210752.0, \"on\": false, \"grid_y\": 10.0, \"snap_grid\": 1.0, \"lb_version\": \"2.08.2\", \"background_image\": \"\", \"sammi_version\": \"2.08.2\", \"encrypted\": false, \"adaptive_resizing\": 1.0, \"unique_id\": \"20221217090547994213617\", \"button_list\": [ { \"color\": 12632256.0, \"persistent\": 1.0, \"text\": \"Twitch Buttons (API)\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ ], \"press_type\": 0.0, \"x\": 0.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.5, \"button_id\": \"exdeckTwitchAlerts\", \"button_duration\": 0.0, \"y\": 0.10000000000000000555111512312578, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 64.0, \"stretch\": 0.0 }, { \"color\": 12632256.0, \"persistent\": 1.0, \"text\": \"Twitch Buttons (SAMMI Commands)\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ ], \"press_type\": 0.0, \"x\": 0.5, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.5, \"button_id\": \"ID280\", \"button_duration\": 0.0, \"y\": 0.10000000000000000555111512312578, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 64.0, \"stretch\": 0.0 }, { \"color\": 9551906.0, \"persistent\": 1.0, \"text\": \"Pop-up Image in\\nRandom Location\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 110.0, \"b0\": \"Causes an image to fade in at a random location, move up, and fade out.\\n\\nCan be adjusted and customized in a variety of ways to create your own effects -\\nfor example, you can combine commands from this button with \\\"Display Random Image\\\".\\nYou'll need to make sure the Scene Name and Source Name are correct, otherwise\\nthe commands won't fire correctly (or in a worst-case scenario, SAMMI will crash -\\nalways save before testing a button!).\", \"v0\": 0.0, \"comment_color\": 8421376.0 }, { \"cmd\": 5.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 192.0, \"b0\": \"This set of commands uses \\\"Random\\\" to assign a number to a set of variables that will be used later.\\n\\nVariables: Unless you have a specific reason to change the names, leave the variables as xpos and ypos.\\n           These are the X (horizontal) and Y (vertical) values that we'll be using later.\\n\\nValues: You may want to adjust these based on the size of the image or other media you're displaying so\\n        that it will show up on-screen *based on the positional alignment set in OBS*. For example,\\n        assuming your canvas in OBS is 1920x1080, an image that's 200x200 with default \\\"Top Left\\\"\\n        alignment should be set at 200 minimum and 1720 maximum. This makes sure that the image will\\n        always display somewhere on-screen without being cut off. Negative values are also allowed.\", \"v0\": 2.0 }, { \"b1\": \"0\", \"cmd\": 77.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 10.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"xpos\", \"b2\": \"1920\", \"v0\": 0.0 }, { \"b1\": \"0\", \"cmd\": 77.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 10.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"ypos\", \"b2\": \"1080\", \"v0\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 10.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Causes the image to move to a location set by \\\"xpos\\\" and \\\"ypos\\\" above.\", \"v0\": 1.0 }, { \"b1\": \"Source\", \"b3\": \"ypos\", \"cmd\": 22.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 20.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Scene\", \"b2\": \"xpos\" }, { \"cmd\": 5.0, \"obsid\": \"Main\", \"pos\": 6.0, \"vis\": 1.0, \"ms\": 20.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 107.0, \"b0\": \"OPTIONAL: Causes the image to move upward by 50 pixels. If you don't want the image to move,\\nturn this command off. Alternatively, if you want it to move in another direction, you can\\nadd \\\/ subtract from X End and\\\/or Y End. Make sure any simple math you use is wrapped in ().\\nFor example, if you wanted the image to move left 75 pixels, X End would be: (xpos-75)\\n\\nIf you don't want the image to move at all, you can safely disable this command.\", \"v0\": 1.0 }, { \"b5\": \"(ypos-50)\", \"b1\": \"Source\", \"b3\": \"ypos\", \"cmd\": 23.0, \"obsid\": \"Main\", \"pos\": 7.0, \"vis\": 1.0, \"ms\": 20.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Scene\", \"b4\": \"xpos\", \"b2\": \"xpos\", \"b6\": \"1000\", \"v0\": 3.0 }, { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 8.0, \"vis\": 1.0, \"ms\": 20.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 91.0, \"b0\": \"Applies a fade effect to the image. The source needs to have\\nFilter > Color Correction applied, otherwise the fade effect won't\\nwork, and you'll get errors in SAMMI.\\nIf you want the image to instantly turn on and off, you can use\\n\\\"Source Change Visibility\\\" commands instead.\", \"v0\": 2.0 }, { \"b1\": \"Color Correction\", \"b3\": \"1\", \"cmd\": 40.0, \"obsid\": \"Main\", \"pos\": 9.0, \"vis\": 1.0, \"ms\": 20.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Source\", \"b4\": \"150\", \"b2\": \"0\", \"v0\": 0.0 }, { \"b1\": \"Color Correction\", \"b3\": \"0\", \"cmd\": 40.0, \"obsid\": \"Main\", \"pos\": 10.0, \"vis\": 1.0, \"ms\": 870.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Source\", \"b4\": \"150\", \"b2\": \"1\", \"v0\": 0.0 }, { \"cmd\": 5.0, \"obsid\": \"Main\", \"pos\": 11.0, \"vis\": 1.0, \"ms\": 870.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 21.0, \"b0\": \"Plays a sound effect. If you don't want to play a sound, you can safely disable\\nor remove this command.\", \"v0\": 1.0 }, { \"b1\": \"\", \"cmd\": 2.0, \"obsid\": \"Main\", \"pos\": 12.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"D:\\\\Users\\\\HassyCo\\\\Stream\\\\SoundEffects\\\\Hassy.ogg\", \"v0\": 0.29999999999999998889776975374843 } ], \"press_type\": 0.0, \"x\": 0.29999999999999998889776975374843, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.099999999999999977795539507496869, \"button_id\": \"ID281\", \"button_duration\": 1020.0, \"y\": 0.90000000000000002220446049250313, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 67.0, \"stretch\": 0.0 }, { \"color\": 9551906.0, \"persistent\": 1.0, \"text\": \"Persistent\\nThing\\nCounter\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 293.0, \"b0\": \"Keeps track of a persistent counter that increases every time the\\nbutton is triggered, either via a SAMMI trigger or by pressing the\\nbutton manually. The value can be manually edited by changing the\\nINI file; this is just a useful way to keep track of a number over\\ntime, like, say, the number of deaths in a Souls-like, the number\\nof times a charater has taken a hit, or whatever else you want\\nto count.\\n\\nThis is provided primarily as an example as you'll need to create the\\nINI and variables yourself. If you want a number that resets on command,\\nyou could also create a button that changes the value back to zero and\\nsaves it to the INI file when the button is pressed.\\n\\nIf no INI exists, the counter will start from 0 each time SAMMI is started.\", \"v0\": 0.0, \"comment_color\": 8421376.0 }, { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 235.0, \"b0\": \"IMPORTANT: This requires the use of an INI file to save the current status of a variable.\\n           You'll need to create this file yourself where SAMMI is located; I strongly\\n           recommend creating a separate folder to keep your INI files. I use a \\\"streamstatus\\\"\\n           folder in the same directory where SAMMI is installed for this.\\n\\n           For example, if SAMMI is located in:\\n              C:\\\/Users\\\/Username\\\/Stream\\\/SAMMI\\n           Then it's recommended you place INI files in a subdirectory, like:\\n              C:\\\/Users\\\/Username\\\/Stream\\\/SAMMI\\\/streamstatus\\n\\n           You can have as many or as few .ini files as you want, it all depends on how you want to\\n           organize things.\", \"v0\": 0.0 }, { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 193.0, \"b0\": \"ALSO IMPORTANT: You'll need to set up your own INI for any INI command to work.\\n\\n                For the example below, you can create an INI with the following:\\n\\n                File name:\\n                counters.ini\\n                \\n                File text:\\n                [thing]\\n                widgets=\\\"0\\\"\\n\", \"v0\": 0.0 }, { \"cmd\": 5.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 172.0, \"b0\": \"File Name: This is the location and name of the INI file. If the file is in a subdirectory\\n           as noted above, all you'll need is that subdirectory, followed by a \\\\, followed\\n           by the name of the file (no .ini is needed).\\n\\nSection:   The top level that we're going to be pulling keys from. Think of it as a keyring.\\n           It can hold a bunch of different keys, this is just telling you which keyring\\n           SAMMI should look at to find the right one.\\n\\nKey:       The individual key that will keep track of something - in this case, a number.\\n   \", \"v0\": 1.0 }, { \"b1\": \"thing\", \"b3\": \"initial\", \"cmd\": 125.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"streamstatus\\\\counters\", \"b2\": \"widgets\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"ongoing\", \"b2\": \"(initial+1)\" }, { \"b1\": \"thing\", \"b3\": \"ongoing\", \"cmd\": 124.0, \"obsid\": \"Main\", \"pos\": 6.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"streamstatus\\\\counters\", \"b2\": \"widgets\" }, { \"b1\": \"Widgets: \\\/$ongoing$\\\/\", \"cmd\": 35.0, \"obsid\": \"Main\", \"pos\": 7.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Test \\\/\\\/ Infinite Sub Goal\" } ], \"press_type\": 0.0, \"x\": 0.20000000000000001110223024625157, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.10000000000000000555111512312578, \"button_id\": \"ID282\", \"button_duration\": 0.0, \"y\": 0.80000000000000004440892098500626, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 65.0, \"stretch\": 0.0 }, { \"color\": 9551906.0, \"persistent\": 1.0, \"text\": \"Play Sound Effect\\n(Button)\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 78.0, \"b0\": \"OPTIONAL: You can choose to stop all other playing sound effects when the button is pressed\\nby including a \\\"Stop Sound Effect\\\" command and leaving \\\"Sound ID\\\" as \\\"all\\\". This will keep\\nmultiple sounds from playing on top of one another.\\nIf you've assigned as Sound ID via \\\"Save Sound ID\\\", you can use \\\"Stop Sound ID\\\" to prevent\\na specific group of sounds or just the one sound from playing based on its ID.\", \"v0\": 1.0 }, { \"cmd\": 146.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 1.0, \"xpan\": 0.0, \"b0\": \"all\" }, { \"b1\": \"\", \"cmd\": 2.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"D:\\\\Users\\\\StreamerPerson\\\\Stream\\\\SoundEffects\\\\WAOW.ogg\", \"v0\": 0.4982698961937715997905229414755 } ], \"press_type\": 0.0, \"x\": 0.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.10000000000000000555111512312578, \"button_id\": \"ID283\", \"button_duration\": 0.0, \"y\": 0.80000000000000004440892098500626, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 75.0, \"stretch\": 0.0 }, { \"color\": 9551906.0, \"persistent\": 1.0, \"text\": \"Play Sound Effect\\n(!command)\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 107.0, \"b0\": \"Uses a trigger to play a sound effect based on a command in chat\\non either Twitch or YouTube. In this example, a legally distinct\\ngame show failure horn when \\\"!failhorn\\\" is put in chat.\\n\\nRight click the button and click \\\"Edit Triggers\\\" to check the\\ncurrent trigger(s) for the button.\", \"v0\": 0.0 }, { \"cmd\": 5.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 78.0, \"b0\": \"OPTIONAL: You can choose to stop all other playing sound effects when the button is pressed\\nby including a \\\"Stop Sound Effect\\\" command and leaving \\\"Sound ID\\\" as \\\"all\\\". This will keep\\nmultiple sounds from playing on top of one another.\\nIf you've assigned as Sound ID via \\\"Save Sound ID\\\", you can use \\\"Stop Sound ID\\\" to prevent\\na specific group of sounds or just the one sound from playing based on its ID.\", \"v0\": 1.0 }, { \"cmd\": 146.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 1.0, \"xpan\": 0.0, \"b0\": \"all\" }, { \"b1\": \"\", \"cmd\": 2.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"D:\\\\Users\\\\HostGuy\\\\Stream\\\\SoundEffects\\\\LegallyDistinctGameShowFailHorn.ogg\", \"v0\": 0.4982698961937715997905229414755 }, { \"cmd\": 5.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 42.0, \"b0\": \"OPTIONAL, BUT RECOMMENDED: Prevents the button from triggering again until the timeout\\nhas ended (in milliseconds).\\nIn this case, 60000 ms = 60 seconds.\", \"v0\": 1.0 }, { \"cmd\": 190.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"60000\" } ], \"press_type\": 0.0, \"x\": 0.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ { \"sub\": 0.0, \"user_name\": \"\", \"case_sensitive\": 0.0, \"founder\": 0.0, \"message\": \"!failhorn\", \"moderator\": 0.0, \"group_id\": \"\", \"vip\": 0.0, \"button_id\": \"ID284\", \"broadcaster\": 0.0, \"trg\": 0.0, \"allow_empty_wildcard\": 0.0 }, { \"sponsor\": 0.0, \"case_sensitive\": 0.0, \"message\": \"!failhorn\", \"moderator\": 0.0, \"group_id\": \"\", \"verified\": 0.0, \"button_id\": \"ID284\", \"broadcaster\": 0.0, \"trg\": 18.0, \"allow_empty_wildcard\": 0.0 } ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.10000000000000000555111512312578, \"button_id\": \"ID284\", \"button_duration\": 0.0, \"y\": 0.90000000000000002220446049250313, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 91.0, \"stretch\": 0.0 }, { \"color\": 9551906.0, \"persistent\": 1.0, \"text\": \"Endless Sub Goal\\n(Twitch)\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 279.0, \"b0\": \"Additional button triggers are needed for this to work:\\n\\n1. Twitch Subscription\\n     Normal Subs, Sub Gifts, Anonymous Sub Gifts, etc. should\\n     all be included here so that any type of sub will trigger\\n     the update.\\n2. SAMMI Trigger\\n     Type should be SAMMI Startup. This will cause SAMMI to pull\\n     sub data at the time of launch (in the off-chance people have\\n     subscribed when you're not live).\\n\\n** Because of these triggers, you MUST set your channel name before\\n   setting the triggers! Otherwise SAMMI will crash due to trying to\\n   pull a variable that doesn't exist.**\", \"v0\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 166.0, \"b0\": \"Just what it says on the tin. You either die a hero or live long enough to become the villain.\\nUses triggers that fire at SAMMI startup and when you get a new subscriber of any type.\\n\\nWhen either of those triggers happen, SAMMI pulls your current subscriber count from\\nTwitch then saves it as a variable (subStatus). After that, a new variable is created\\nby adding one to subStatus (subGoal).\\n\\nA text source is then updated to show the current \\\"goal\\\", which will always be one\\nhigher than your current number of subscribers.\", \"v0\": 0.0 }, { \"b1\": \"subStatus\", \"cmd\": 177.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"YOUR CHANNEL HERE\" }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"subGoal\", \"b2\": \"(subStatus+1)\" }, { \"b1\": \"Sub Goal: \\\/$substatus$\\\/\\\/\\\/$subGoal$\\\/\", \"cmd\": 35.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Text Source\" } ], \"press_type\": 0.0, \"x\": 0.20000000000000001110223024625157, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.10000000000000000555111512312578, \"button_id\": \"ID285\", \"button_duration\": 0.0, \"y\": 0.90000000000000002220446049250313, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 65.0, \"stretch\": 0.0 }, { \"color\": 12632256.0, \"persistent\": 1.0, \"text\": \"The Kitchen Sink\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ ], \"press_type\": 0.0, \"x\": 0.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.5, \"button_id\": \"ID286\", \"button_duration\": 0.0, \"y\": 0.69999999999999995559107901499374, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 64.0, \"stretch\": 0.0 }, { \"color\": 10830180.0, \"persistent\": 1.0, \"text\": \"Announcement\\n(API)\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 89.0, \"b0\": \"Sends an \\\"Announcement\\\" message to chat via the account of your choosing.\\n\\nBy default, brings up two input boxes:\\n1.) The message you want to use for the announcement\\n2.) The color of the announcement (defaults to \\\"primary\\\")\", \"v0\": 0.0, \"comment_color\": 8421376.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 44.0, \"b0\": \"Clears any existing variables within the button to keep things clean.\\nLeaving the field empty or putting \\\"all\\\" (without quotes) will have\\nthe same effect.\", \"v0\": 1.0 }, { \"cmd\": 78.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 161.0, \"b0\": \"(OPTIONAL BUT RECOMMENDED)\\nCreates a \\\"secrets\\\" object to store information in. User ID and\\nOAuth shouldn't be visible unless you're specifically TRYING to\\nreveal it, but this adds an extra barrier in the Variable Window\\nby storing it as a separate object.\\n\\nIf you remove this, you'll also want to remove the \\\"secrets.\\\" in\\nfront of ID \\\/ OAuth \\\/ botID \\\/ botOAuth below.\", \"v0\": 1.0 }, { \"cmd\": 16.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"secrets\" }, { \"cmd\": 5.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Twitch API calls to grab needed User ID and OAuth data.\", \"v0\": 10.0 }, { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 6.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 25.0, \"b0\": \"Use this set of commands if you're sending the announcement from your channel account,\\ni.e. \\\"LizardFriend\\\".\", \"v0\": 3.0 }, { \"b1\": \"secrets.ID\", \"cmd\": 105.0, \"obsid\": \"Main\", \"pos\": 7.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"YOUR CHANNEL HERE\", \"v0\": 0.0 }, { \"b1\": \"secrets.OAuth\", \"cmd\": 105.0, \"obsid\": \"Main\", \"pos\": 8.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"YOUR CHANNEL HERE\", \"v0\": 1.0 }, { \"b1\": \"{\\\"Authorization\\\":\\\"Bearer \\\/$secrets.OAuth$\\\/\\\",\\n\\\"Client-Id\\\":\\\"\\\/$global.twitch_client_id$\\\/\\\",\\n\\\"Content-Type\\\":\\\"application\\\/json\\\"}\", \"cmd\": 168.0, \"obsid\": \"Main\", \"pos\": 9.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 86.0, \"b0\": \"twitchHeader\" }, { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 10.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 1.0, \"xpan\": 21.0, \"b0\": \"Use this set of commands if you're sending the announcement from a separate \\\"bot\\\" account\\nyou manage, i.e. \\\"LizardBot\\\".\", \"v0\": 5.0 }, { \"b1\": \"secrets.ID\", \"cmd\": 105.0, \"obsid\": \"Main\", \"pos\": 11.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"YOUR CHANNEL HERE\", \"v0\": 0.0 }, { \"b1\": \"secrets.OAuth\", \"cmd\": 105.0, \"obsid\": \"Main\", \"pos\": 12.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"YOUR CHANNEL HERE\", \"v0\": 1.0 }, { \"b1\": \"secrets.botID\", \"cmd\": 105.0, \"obsid\": \"Main\", \"pos\": 13.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"YOUR BOT HERE\", \"v0\": 0.0 }, { \"b1\": \"secrets.botOAuth\", \"cmd\": 105.0, \"obsid\": \"Main\", \"pos\": 14.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"YOUR BOT HERE\", \"v0\": 1.0 }, { \"b1\": \"{\\\"Authorization\\\":\\\"Bearer \\\/$secrets.botOAuth$\\\/\\\",\\n\\\"Client-Id\\\":\\\"\\\/$global.twitch_client_id$\\\/\\\",\\n\\\"Content-Type\\\":\\\"application\\\/json\\\"}\", \"cmd\": 168.0, \"obsid\": \"Main\", \"pos\": 15.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 86.0, \"b0\": \"twitchHeader\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 16.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 156.0, \"b0\": \"Brings up two User Input dialogues:\\n1. Type in whatever message you want, up to 500 characters. This is the\\n   message that will go out to chat as an announcement.\\n2. Sets the color of the announcement. Valid options:\\n   blue, green, orange, purple, primary\\n   \\\"Primary\\\" is the primary color for your channel that you can adjust in Twitch's\\n   channel settings. If an invalid input is entered, the command will fail.\", \"v0\": 2.0 }, { \"b1\": \"\", \"cmd\": 214.0, \"obsid\": \"Main\", \"pos\": 17.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Enter message:\", \"b2\": \"custommessage\" }, { \"b1\": \"primary\", \"cmd\": 214.0, \"obsid\": \"Main\", \"pos\": 18.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 19.0, \"b0\": \"Enter color:\\n(Valid Options: blue, green, orange, purple, primary)\", \"b2\": \"color\" }, { \"cmd\": 5.0, \"obsid\": \"Main\", \"pos\": 19.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Sends the announcement to chat.\", \"v0\": 4.0 }, { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 20.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 20.0, \"b0\": \"Use this command if you're sending the announcement from your channel account,\\ni.e. \\\"LizardFriend\\\".\", \"v0\": 1.0 }, { \"b1\": \"POST\", \"b3\": \"{\\\"message\\\":\\\"\\\/$custommessage$\\\/\\\",\\\"color\\\":\\\"\\\/$color$\\\/\\\"}\", \"cmd\": 169.0, \"obsid\": \"Main\", \"pos\": 21.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"https:\\\/\\\/api.twitch.tv\\\/helix\\\/chat\\\/announcements?broadcaster_id=\\\/$secrets.ID$\\\/&moderator_id=\\\/$secrets.ID$\\\/\", \"b4\": \"response\", \"b2\": \"twitchHeader\" }, { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 22.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 1.0, \"xpan\": 17.0, \"b0\": \"Use this command if you're sending the announcement from a separate \\\"bot\\\" account\\nyou manage, i.e. \\\"LizardBot\\\".\", \"v0\": 1.0 }, { \"b1\": \"POST\", \"b3\": \"{\\\"message\\\":\\\"\\\/$custommessage$\\\/\\\",\\\"color\\\":\\\"\\\/$color$\\\/\\\"}\", \"cmd\": 169.0, \"obsid\": \"Main\", \"pos\": 23.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"https:\\\/\\\/api.twitch.tv\\\/helix\\\/chat\\\/announcements?broadcaster_id=\\\/$secrets.ID$\\\/&moderator_id=\\\/$secrets.botID$\\\/\", \"b4\": \"response\", \"b2\": \"twitchHeader\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 24.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 24.0, \"b0\": \"Waits for the response from the server to exist, then saves it to a variable which\\ncan be checked via \\\"Open Variable Window\\\". Useful for troubleshooting.\", \"v0\": 1.0 }, { \"b1\": \"1000\", \"cmd\": 153.0, \"obsid\": \"Main\", \"pos\": 25.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"response\" } ], \"press_type\": 0.0, \"x\": 0.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.10000000000000000555111512312578, \"button_id\": \"ID287\", \"button_duration\": 0.0, \"y\": 0.20000000000000001110223024625157, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 65.0, \"stretch\": 0.0 }, { \"color\": 10830180.0, \"persistent\": 1.0, \"text\": \"Run Commercial\\n60s\\n(API)\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 101.0, \"b0\": \"IMPORTANT: This should be used only if you plan on running additional ads outside\\n           of scheduled Twitch ads or ads played via the Twitch Dashboard (or an\\n           OBS dock). It's NOT a replacement for the ad schedule.\\n           Running an ad via this method, can - and likely will - run an ad on top\\n           an existing ad block, causing the ad block to run longer than intended.\", \"v0\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 25.0, \"b0\": \"Immediately runs a 60-second commercial via the Twitch API.\\nThe duration can be changed.\\n\", \"v0\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 173.0, \"b0\": \"Clears any existing variables within the button to keep things clean,\\nthen creates the \\\"settings\\\" object which will be used later.\\n\\n(OPTIONAL BUT RECOMMENDED) Also creates a \\\"secrets\\\" object to\\nstore information in. User ID and OAuth shouldn't be visible\\nunless you're specifically TRYING to reveal it, but this adds\\nan extra barrier in the Variable Window by storing it as a\\nseparate object. Only remove this if you absolutely know\\nwhat you're doing.\\n\\n\", \"v0\": 2.0 }, { \"cmd\": 78.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"\" }, { \"cmd\": 16.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"secrets\" }, { \"cmd\": 5.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Twitch API Calls\", \"v0\": 5.0 }, { \"b1\": \"secrets.ID\", \"cmd\": 105.0, \"obsid\": \"Main\", \"pos\": 6.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"YOUR CHANNEL NAME HERE\", \"v0\": 0.0 }, { \"b1\": \"secrets.OAuth\", \"cmd\": 105.0, \"obsid\": \"Main\", \"pos\": 7.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"YOUR CHANNEL NAME HERE\", \"v0\": 1.0 }, { \"b1\": \"{\\\"Authorization\\\":\\\"Bearer \\\/$secrets.OAuth$\\\/\\\",\\n\\\"Client-Id\\\":\\\"\\\/$global.twitch_client_id$\\\/\\\",\\n\\\"Content-Type\\\":\\\"application\\\/json\\\"}\", \"cmd\": 168.0, \"obsid\": \"Main\", \"pos\": 8.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 47.0, \"b0\": \"twitchHeader\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 9.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 232.0, \"b0\": \"Runs an ad. You can change the length of the ad by\\nadjusting the number in the \\\"Body Object JSON\\\".\\n\\nURL: https:\\\/\\\/api.twitch.tv\\\/helix\\\/channels\\\/commercial\\nBody: {\\\"broadcaster_id\\\":\\\"\\\/$secrets.ID$\\\/\\\", \\\"length\\\":60}\\n\\nValid options for \\\"length\\\": 30, 60, 90, 120, 150, 180\\nThis is how long the ad will run in seconds. Twitch tends\\nto run ads in 30-second blocks, so if you use a different value,\\nTwitch will try to run an ad close to the value you entered.\\n\\nThe response variable is optional, but is useful for troubleshooting\\nand checking to make sure the HTTP request went through properly.\", \"v0\": 1.0 }, { \"b1\": \"POST\", \"b3\": \"{\\\"broadcaster_id\\\":\\\"\\\/$secrets.ID$\\\/\\\", \\\"length\\\":60}\", \"cmd\": 169.0, \"obsid\": \"Main\", \"pos\": 10.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"https:\\\/\\\/api.twitch.tv\\\/helix\\\/channels\\\/commercial\", \"b4\": \"response\", \"b2\": \"twitchHeader\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 11.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 24.0, \"b0\": \"Waits for the response from the server to exist, then saves it to a variable which\\ncan be checked via \\\"Open Variable Window\\\". Useful for troubleshooting.\", \"v0\": 1.0 }, { \"b1\": \"1000\", \"cmd\": 153.0, \"obsid\": \"Main\", \"pos\": 12.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"response\" } ], \"press_type\": 0.0, \"x\": 0.20000000000000001110223024625157, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.10000000000000000555111512312578, \"button_id\": \"ID288\", \"button_duration\": 0.0, \"y\": 0.20000000000000001110223024625157, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 65.0, \"stretch\": 0.0 }, { \"color\": 9551906.0, \"persistent\": 1.0, \"text\": \"Play Sound Effect\\n(Twitch Channel Points)\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 105.0, \"b0\": \"This relies on a Twitch trigger in SAMMI to function properly.\\nBe sure to set up your Twitch rewards via SAMMI so that they\\ncan be used as triggers!\\n\\nFor more info on setting up channel point triggers:\\nhttps:\\\/\\\/sammi.solutions\\\/docs\\\/triggers\\\/twitch#channelpoints\", \"v0\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 178.0, \"b0\": \"OPTIONAL: You can choose to stop all other playing sound effects when the button is pressed\\nby including a \\\"Stop Sound Effect\\\" command and leaving \\\"Sound ID\\\" as \\\"all\\\". This will keep\\nmultiple sounds from playing on top of one another.\\nIf you've assigned as Sound ID via \\\"Save Sound ID\\\", you can use \\\"Stop Sound ID\\\" to prevent\\na specific group of sounds or just the one sound from playing based on its ID.\", \"v0\": 1.0 }, { \"cmd\": 146.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 1.0, \"xpan\": 0.0, \"b0\": \"all\" }, { \"b1\": \"\", \"cmd\": 2.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"D:\\\\Users\\\\StreamerPerson\\\\Stream\\\\SoundEffects\\\\WAOW.ogg\", \"v0\": 0.4982698961937715997905229414755 } ], \"press_type\": 0.0, \"x\": 0.10000000000000000555111512312578, \"border\": 2.0, \"image\": \"\", \"triggers\": [ { \"requireinput\": 0.0, \"case_sensitive\": 0.0, \"message\": \"*\", \"group_id\": \"\", \"redeemname\": \"\", \"button_id\": \"ID289\", \"trg\": 3.0, \"allow_empty_wildcard\": 0.0 } ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.10000000000000000555111512312578, \"button_id\": \"ID289\", \"button_duration\": 0.0, \"y\": 0.80000000000000004440892098500626, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 91.0, \"stretch\": 0.0 }, { \"color\": 6908265.0, \"persistent\": 1.0, \"text\": \"Basic Follow\\nAlert - Fade\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 59.0, \"b0\": \"The \\\"Twitch New Follower\\\" trigger in SAMMI is recommended for this.\\nFor more info on triggers:\\nhttps:\\\/\\\/sammi.solutions\\\/docs\\\/triggers\\\/introduction\", \"v0\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 94.0, \"b0\": \"Example 1: Image Fade In\\\/Out with Delayed Text\\nA basic alert that will cause an image and text to fade in, then fade out. \\nBoth the image source and text source will need a \\\"Color Correction\\\" filter\\nto be applied in OBS for this to work properly.\", \"v0\": 8.0 }, { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 20.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 61.0, \"b0\": \"You'll need to change the Source Names to your own sources (i.e. an image, video, text, etc.)\\nfor these to work properly. Otherwise SAMMI will likely report a bunch of errors.\", \"v0\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 122.0, \"b0\": \"Runs the following commands:\\n* Fades the image in over 0.5 seconds.\\n* Fades text in after slight delay.\\n* Holds for 4 seconds.\\n* Fades text out.\\n* Fades image out after slight delay.\\nNOTE: Commands will run based on the time under \\\"Delay (ms)\\\", NOT the order they're listed in.\", \"v0\": 4.0 }, { \"b1\": \"Color Correction\", \"b3\": \"1\", \"cmd\": 40.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 15.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Alert Image\\\/Video\", \"b4\": \"500\", \"b2\": \"0\", \"v0\": 0.0 }, { \"b1\": \"Color Correction\", \"b3\": \"1\", \"cmd\": 40.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 265.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Alert Text\", \"b4\": \"500\", \"b2\": \"0\", \"v0\": 0.0 }, { \"b1\": \"Color Correction\", \"b3\": \"0\", \"cmd\": 40.0, \"obsid\": \"Main\", \"pos\": 6.0, \"vis\": 1.0, \"ms\": 4000.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Alert Text\", \"b4\": \"500\", \"b2\": \"1\", \"v0\": 0.0 }, { \"b1\": \"Color Correction\", \"b3\": \"0\", \"cmd\": 40.0, \"obsid\": \"Main\", \"pos\": 7.0, \"vis\": 1.0, \"ms\": 4500.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Alert Image\\\/Video\", \"b4\": \"500\", \"b2\": \"1\", \"v0\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 8.0, \"vis\": 1.0, \"ms\": 4500.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 23.0, \"b0\": \"Plays a sound effect of your choosing from your local computer.\\nNOTE: Sounds need to be in .ogg format for SAMMI to recognize them.\", \"v0\": 1.0 }, { \"b1\": \"\", \"cmd\": 2.0, \"obsid\": \"Main\", \"pos\": 9.0, \"vis\": 1.0, \"ms\": 10.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"D:\\\\Users\\\\Ness\\\\Stream\\\\YouShouldPlayEarthbound.ogg\", \"v0\": 1.0 } ], \"press_type\": 0.0, \"x\": 0.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.10000000000000000555111512312578, \"button_id\": \"ID290\", \"button_duration\": 4500.0, \"y\": 0.5, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 67.0, \"stretch\": 0.0 }, { \"color\": 6908265.0, \"persistent\": 1.0, \"text\": \"Basic Follow\\nAlert - Slide\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 59.0, \"b0\": \"The \\\"Twitch New Follower\\\" trigger in SAMMI is recommended for this.\\nFor more info on triggers:\\nhttps:\\\/\\\/sammi.solutions\\\/docs\\\/triggers\\\/introduction\", \"v0\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 94.0, \"b0\": \"Example 2: Image Slide In\\\/Out with Delayed Text\\nA basic alert that will cause an image and text to slide in, then slide out based on\\nthe starting and ending X and Y coordinates. Flip the coordinates to cause the image\\nto move back to its original location.\\nX and Y coordinates can easily be found by using the Transform tool in OBS.\", \"v0\": 8.0 }, { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 20.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 61.0, \"b0\": \"You'll need to change the Source Names to your own sources (i.e. an image, video, text, etc.)\\nfor these to work properly. Otherwise SAMMI will likely report a bunch of errors.\", \"v0\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 122.0, \"b0\": \"Runs the following commands:\\n* Slides image in over 0.5 seconds.\\n* Slides text in after slight delay.\\n* Holds for 4 seconds.\\n* Slides text out.\\n* Slides image out after slight delay.\\nNOTE: Commands will run based on the time under \\\"Delay (ms)\\\", NOT the order they're listed in.\", \"v0\": 4.0 }, { \"b5\": \"435\", \"b1\": \"Alert Image\\\/Video\", \"b3\": \"435\", \"cmd\": 23.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 10.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Use the Drop-down\", \"b4\": \"1440\", \"b2\": \"1920\", \"b6\": \"500\", \"v0\": 3.0 }, { \"b5\": \"280\", \"b1\": \"Alert Text\", \"b3\": \"280\", \"cmd\": 23.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 350.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Use the Drop-down\", \"b4\": \"1436\", \"b2\": \"1920\", \"b6\": \"500\", \"v0\": 3.0 }, { \"b5\": \"280\", \"b1\": \"Alert Text\", \"b3\": \"280\", \"cmd\": 23.0, \"obsid\": \"Main\", \"pos\": 6.0, \"vis\": 1.0, \"ms\": 4250.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Use the Drop-down\", \"b4\": \"1920\", \"b2\": \"1436\", \"b6\": \"350\", \"v0\": 3.0 }, { \"b5\": \"435\", \"b1\": \"Alert Image\\\/Video\", \"b3\": \"435\", \"cmd\": 23.0, \"obsid\": \"Main\", \"pos\": 7.0, \"vis\": 1.0, \"ms\": 4500.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Use the Drop-down\", \"b4\": \"1920\", \"b2\": \"1440\", \"b6\": \"250\", \"v0\": 3.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 8.0, \"vis\": 1.0, \"ms\": 4500.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 23.0, \"b0\": \"Plays a sound effect of your choosing from your local computer.\\nNOTE: Sounds need to be in .ogg format for SAMMI to recognize them.\", \"v0\": 1.0 }, { \"b1\": \"\", \"cmd\": 2.0, \"obsid\": \"Main\", \"pos\": 9.0, \"vis\": 1.0, \"ms\": 10.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"D:\\\\Users\\\\Marina\\\\Stream\\\\YouShouldPlayMischiefMakers.ogg\", \"v0\": 1.0 } ], \"press_type\": 0.0, \"x\": 0.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.10000000000000000555111512312578, \"button_id\": \"ID291\", \"button_duration\": 4750.0, \"y\": 0.59999999999999997779553950749687, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 67.0, \"stretch\": 0.0 }, { \"color\": 6908265.0, \"persistent\": 1.0, \"text\": \"Advanced\\nFollow\\nAlert\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 59.0, \"b0\": \"The \\\"Twitch New Follower\\\" trigger in SAMMI is recommended for this.\\nFor more info on triggers:\\nhttps:\\\/\\\/sammi.solutions\\\/docs\\\/triggers\\\/introduction\", \"v0\": 0.0 }, { \"cmd\": 5.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 1.0, \"xpan\": 64.0, \"b0\": \"OPTIONAL: These commands pull the most recent follower name from Twitch. Keep the \\\"Off\\\" box\\n          checked if you do not want to pull the username from Twitch. (Note that pulling a\\n          username won't automatically display it on stream or in chat.)\", \"v0\": 5.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 44.0, \"b0\": \"This set of commands pulls the name of the most recent follower on Twitch, creates an array to store that\\ninformation in, then puts the name that was pulled at the top of the array that was just created to be used\\nin the next set of commands.\", \"v0\": 4.0 }, { \"b1\": \"display_name\", \"cmd\": 66.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 10.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"followQueue\" }, { \"cmd\": 17.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 10.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"follow_name_queue\" }, { \"b1\": \"top\", \"cmd\": 96.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 10.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"follow_name_queue\", \"b2\": \"followQueue\" }, { \"b1\": \"0\", \"cmd\": 98.0, \"obsid\": \"Main\", \"pos\": 6.0, \"vis\": 1.0, \"ms\": 20.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"follow_name_queue\", \"b2\": \"followname\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 7.0, \"vis\": 1.0, \"ms\": 15.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Commands that cause various elements to fade in.\", \"v0\": 6.0 }, { \"b1\": \"Fade\", \"b3\": \"0.75\", \"cmd\": 40.0, \"obsid\": \"Main\", \"pos\": 8.0, \"vis\": 1.0, \"ms\": 25.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Background OS Window\", \"b4\": \"250\", \"b2\": \"0\", \"v0\": 0.0 }, { \"b1\": \"Fade\", \"b3\": \"1\", \"cmd\": 40.0, \"obsid\": \"Main\", \"pos\": 9.0, \"vis\": 1.0, \"ms\": 75.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Text Line 1\", \"b4\": \"250\", \"b2\": \"0\", \"v0\": 0.0 }, { \"b1\": \"Fade\", \"b3\": \"1\", \"cmd\": 40.0, \"obsid\": \"Main\", \"pos\": 10.0, \"vis\": 1.0, \"ms\": 275.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Text Line 2\", \"b4\": \"250\", \"b2\": \"0\", \"v0\": 0.0 }, { \"b1\": \"Fade\", \"b3\": \"1\", \"cmd\": 40.0, \"obsid\": \"Main\", \"pos\": 11.0, \"vis\": 1.0, \"ms\": 525.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Bun-E03\", \"b4\": \"250\", \"b2\": \"0\", \"v0\": 0.0 }, { \"b1\": \"Fade\", \"b3\": \"0.9\", \"cmd\": 40.0, \"obsid\": \"Main\", \"pos\": 12.0, \"vis\": 1.0, \"ms\": 1500.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Pixel Heart\", \"b4\": \"250\", \"b2\": \"0\", \"v0\": 0.0 }, { \"b1\": \"\", \"cmd\": 2.0, \"obsid\": \"Main\", \"pos\": 13.0, \"vis\": 1.0, \"ms\": 25.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"D:\\\\Users\\\\Marina\\\\Stream\\\\YouReallyShouldPlayMischiefMakers.ogg\", \"v0\": 0.74740484429065745519693564347108 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 14.0, \"vis\": 1.0, \"ms\": 25.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 23.0, \"b0\": \"Commands that cause various elements to fade out.\\nNote both the duration and delay, as these can overlap to create unique fade-out effects.\", \"v0\": 5.0 }, { \"b1\": \"Fade\", \"b3\": \"0\", \"cmd\": 40.0, \"obsid\": \"Main\", \"pos\": 15.0, \"vis\": 1.0, \"ms\": 6025.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Pixel Heart\", \"b4\": \"250\", \"b2\": \"0.9\", \"v0\": 0.0 }, { \"b1\": \"Fade\", \"b3\": \"0\", \"cmd\": 40.0, \"obsid\": \"Main\", \"pos\": 16.0, \"vis\": 1.0, \"ms\": 6225.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Bun-E03\", \"b4\": \"250\", \"b2\": \"1\", \"v0\": 0.0 }, { \"b1\": \"Fade\", \"b3\": \"0\", \"cmd\": 40.0, \"obsid\": \"Main\", \"pos\": 17.0, \"vis\": 1.0, \"ms\": 7225.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Text Line 2\", \"b4\": \"250\", \"b2\": \"1\", \"v0\": 0.0 }, { \"b1\": \"Fade\", \"b3\": \"0\", \"cmd\": 40.0, \"obsid\": \"Main\", \"pos\": 18.0, \"vis\": 1.0, \"ms\": 7525.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Text Line 1\", \"b4\": \"250\", \"b2\": \"1\", \"v0\": 0.0 }, { \"b1\": \"Fade\", \"b3\": \"0\", \"cmd\": 40.0, \"obsid\": \"Main\", \"pos\": 19.0, \"vis\": 1.0, \"ms\": 7825.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Background OS Window\", \"b4\": \"250\", \"b2\": \"0.75\", \"v0\": 0.0 }, { \"cmd\": 5.0, \"obsid\": \"Main\", \"pos\": 20.0, \"vis\": 1.0, \"ms\": 7825.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 82.0, \"b0\": \"OPTIONAL: Both the chat message and displaying the name of the person who just\\n          followed are optional. If you pulled the username from Twitch in the\\n          optional step above, you can use \\\/$followname$\\\/ (or the value you set\\n          instead) to display in chat. To test this, use SAMMI bridge in OBS to\\n          simulate a new follow. Otherwise you'll see \\\"undefined\\\" instead.\", \"v0\": 1.0 }, { \"b1\": \"YOUR CHANNEL HERE\", \"cmd\": 148.0, \"obsid\": \"Main\", \"pos\": 21.0, \"vis\": 1.0, \"ms\": 7825.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Thanks for the follow, \\\/$followname$\\\/!\" } ], \"press_type\": 0.0, \"x\": 0.20000000000000001110223024625157, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.10000000000000000555111512312578, \"button_id\": \"ID292\", \"button_duration\": 7825.0, \"y\": 0.5, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 67.0, \"stretch\": 0.0 }, { \"color\": 6908265.0, \"persistent\": 1.0, \"text\": \"Random Follow\\nAlert - Array\", \"release_duration\": 0.0, \"queueable\": 1.0, \"command_list\": [ { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 59.0, \"b0\": \"The \\\"Twitch New Follower\\\" trigger in SAMMI is recommended for this.\\nFor more info on triggers:\\nhttps:\\\/\\\/sammi.solutions\\\/docs\\\/triggers\\\/introduction\", \"v0\": 0.0 }, { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 59.0, \"b0\": \"This button uses variables to create an array, add three values to that array,\\nthen pull one of those values at random to push a separate button. For more info\\non variables:\\nhttps:\\\/\\\/sammi.solutions\\\/docs\\\/commands\\\/variables\", \"v0\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 41.0, \"b0\": \"Clears the existing \\\"follow\\\" array then creates a new one to keep the array\\nclean and truly randomized.\", \"v0\": 2.0 }, { \"cmd\": 78.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 10.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"follow\" }, { \"cmd\": 17.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 10.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"follow\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 81.0, \"b0\": \"Inserts three values into the array. \\\"Value to Insert\\\" should be the name of any buttons\\nyou want to potentially be pressed when the button triggers (in this case, when someone\\nfollows you). Add or remove \\\"Array Insert\\\" commands as needed.\\nNOTE: If you change the \\\"Save Variable As\\\" line, you MUST change the \\\"Button ID\\\" to match\\n      in the \\\"Trigger Variable\\\" command below.\", \"v0\": 4.0 }, { \"b1\": \"top\", \"cmd\": 96.0, \"obsid\": \"Main\", \"pos\": 6.0, \"vis\": 1.0, \"ms\": 10.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"follow\", \"b2\": \"\\\"Cat\\\"\" }, { \"b1\": \"top\", \"cmd\": 96.0, \"obsid\": \"Main\", \"pos\": 7.0, \"vis\": 1.0, \"ms\": 10.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"follow\", \"b2\": \"\\\"Dog\\\"\" }, { \"b1\": \"top\", \"cmd\": 96.0, \"obsid\": \"Main\", \"pos\": 8.0, \"vis\": 1.0, \"ms\": 10.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"follow\", \"b2\": \"\\\"Rabbit\\\"\" }, { \"b1\": \"random_follow\", \"cmd\": 101.0, \"obsid\": \"Main\", \"pos\": 9.0, \"vis\": 1.0, \"ms\": 10.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"follow\", \"b2\": \"\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 10.0, \"vis\": 1.0, \"ms\": 10.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 58.0, \"b0\": \"Presses the button that coresponds to the value pulled from the array above - so\\nin this case, either Cat, Dog, or Rabbit.\\nNOTE: If you change the \\\"Button ID\\\" line, you MUST change the \\\"Save Variable As\\\" line\\n      to match in the \\\"Array Random\\\" command above.\", \"v0\": 1.0 }, { \"b1\": \"0\", \"cmd\": 132.0, \"obsid\": \"Main\", \"pos\": 11.0, \"vis\": 1.0, \"ms\": 25.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"\\\/$random_follow$\\\/\", \"v0\": 1.0 } ], \"press_type\": 0.0, \"x\": 0.10000000000000000555111512312578, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"alert\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.10000000000000000555111512312578, \"button_id\": \"ID293\", \"button_duration\": 25.0, \"y\": 0.5, \"switch_deck\": \"\", \"height\": 0.099999999999999977795539507496869, \"release_list\": [ ], \"functions\": 193.0, \"stretch\": 0.0 }, { \"color\": 6908265.0, \"persistent\": 1.0, \"text\": \"Random Follow\\nAlert - Command\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 59.0, \"b0\": \"The \\\"Twitch New Follower\\\" trigger in SAMMI is recommended for this.\\nFor more info on triggers:\\nhttps:\\\/\\\/sammi.solutions\\\/docs\\\/triggers\\\/introduction\", \"v0\": 0.0 }, { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 122.0, \"b0\": \"This button uses the \\\"Random\\\" command in SAMMI to pull a random value, assign it to a variable,\\nand then use that variable to change the properties of a source (in this case, an image). For\\nthe \\\"Random\\\" command to work, all files you want to use must be the same type (i.e. PNG, JPG, GIF)\\nand all be given sequential numbers (i.e. 1, 2, 3, 4).\", \"v0\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 150.0, \"b0\": \"Random: Creates a variable that will select a random number from between the Minimum Value\\n        Allowed and the Maximum Value Allowed, then assigns the number to that variable.\\n\\nSource Change Settings: Changes the image to the specified values. In this case, it will\\n        look for files in D:\\\/Users\\\/Nekomata\\\/PicturesOfCats\\\/ and pull a random image from\\n        that location, assuming it's a number within the values allowed and matches the\\n        file type (in this case, .PNG). You MUST use forward slashes \\\/like this\\\/ for the\\n        path and wrap the file path in quotation marks, otherwise the command will fail.\\n\", \"v0\": 0.0 }, { \"b1\": \"1\", \"cmd\": 77.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 10.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"randomimage\", \"b2\": \"5\", \"v0\": 0.0 }, { \"b1\": \"{\\\"file\\\":\\\"D:\\\/Users\\\/Nekomata\\\/PicturesOfCats\\\/\\\/$randomimage$\\\/.PNG\\\"}\", \"cmd\": 34.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 10.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Alert Image\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 122.0, \"b0\": \"Runs the following commands:\\n* Fades the image in over 0.5 seconds.\\n* Fades text in after slight delay.\\n* Holds for 4 seconds.\\n* Fades text out.\\n* Fades image out after slight delay.\\nNOTE: Commands will run based on the time under \\\"Delay (ms)\\\", NOT the order they're listed in.\", \"v0\": 4.0 }, { \"b1\": \"Color Correction\", \"b3\": \"1\", \"cmd\": 40.0, \"obsid\": \"Main\", \"pos\": 6.0, \"vis\": 1.0, \"ms\": 15.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Alert Image\", \"b4\": \"500\", \"b2\": \"0\", \"v0\": 0.0 }, { \"b1\": \"Color Correction\", \"b3\": \"1\", \"cmd\": 40.0, \"obsid\": \"Main\", \"pos\": 7.0, \"vis\": 1.0, \"ms\": 265.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Alert Text\", \"b4\": \"500\", \"b2\": \"0\", \"v0\": 0.0 }, { \"b1\": \"Color Correction\", \"b3\": \"0\", \"cmd\": 40.0, \"obsid\": \"Main\", \"pos\": 8.0, \"vis\": 1.0, \"ms\": 4000.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Alert Text\", \"b4\": \"500\", \"b2\": \"1\", \"v0\": 0.0 }, { \"b1\": \"Color Correction\", \"b3\": \"0\", \"cmd\": 40.0, \"obsid\": \"Main\", \"pos\": 9.0, \"vis\": 1.0, \"ms\": 4500.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Alert Image\", \"b4\": \"500\", \"b2\": \"1\", \"v0\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 10.0, \"vis\": 1.0, \"ms\": 4500.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 23.0, \"b0\": \"Plays a sound effect of your choosing from your local computer.\\nNOTE: Sounds need to be in .ogg format for SAMMI to recognize them.\", \"v0\": 1.0 }, { \"b1\": \"\", \"cmd\": 2.0, \"obsid\": \"Main\", \"pos\": 11.0, \"vis\": 1.0, \"ms\": 10.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"D:\\\\Users\\\\Marina\\\\Stream\\\\IJustReallyLikeMischiefMakersOkay.ogg\", \"v0\": 1.0 } ], \"press_type\": 0.0, \"x\": 0.10000000000000000555111512312578, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.10000000000000000555111512312578, \"button_id\": \"ID294\", \"button_duration\": 4500.0, \"y\": 0.59999999999999997779553950749687, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 67.0, \"stretch\": 0.0 }, { \"color\": 6908265.0, \"persistent\": 1.0, \"text\": \"Dynamic\\nSubscriber\\nAlert - Trigger\\n(1\\\/2)\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 101.0, \"b0\": \"Triggers a data pull from Twitch that will be used in the second button\\nin this set. This isn't strictly required, but it keeps things nice and tidy.\\n\\nYou may want or need to set your own button(s) to trigger; this can be used in a\\nvariety of ways, including setting up an array to press a button at random after\\npulling info from Twitch.\", \"v0\": 0.0 }, { \"b1\": \"display_name\", \"cmd\": 66.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"subQueue\" }, { \"cmd\": 17.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 10.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"subName\" }, { \"b1\": \"top\", \"cmd\": 96.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 20.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"subName\", \"b2\": \"subQueue\" }, { \"b1\": \"0\", \"cmd\": 132.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 20.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"exampleSubAction\", \"v0\": 1.0 } ], \"press_type\": 0.0, \"x\": 0.29999999999999998889776975374843, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.10000000000000000555111512312578, \"button_id\": \"exampleSubTrigger\", \"button_duration\": 20.0, \"y\": 0.5, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 65.0, \"stretch\": 0.0 }, { \"color\": 6908265.0, \"persistent\": 1.0, \"text\": \"Dynamic\\nSubscriber\\nAlert - Action\\n(2\\\/2)\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 267.0, \"b0\": \"The \\\"Array Pull\\\" command should always follow the format of\\nButtonName.ArrayName\\n\\nFor example, if the button name is \\\"exampleSubTrigger\\\" and the array name is\\n\\\"subName\\\", the Array Pull should be\\nsubTrigger.subName\\n\\nThis is because SAMMI is looking for the SubName data that's stored in\\nthe exampleSubTrigger button.\\n\\nThe variable can be changed to whatever you like. Make sure it matches\\nand is wrapped correctly with \\\/$ $\\\/ so that it will display properly.\\n\\nIf the button name changes, you'll want to adjust the Array Pull to match.\\n\", \"v0\": 1.0 }, { \"b1\": \"0\", \"cmd\": 98.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 10.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"exampleSubTrigger.subName\", \"b2\": \"subscriber\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 10.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 86.0, \"b0\": \"You can change a text source to display the subscriber's name\\nautomatically by using the variable above. Depending on your\\nstream layout and needs, you can include this as part of a single\\nline, or you may want to consider having the subscriber name be\\na separate line so that it's easier to see.\", \"v0\": 0.0 }, { \"b1\": \"Thanks for the sub, \\\/$subscriber$\\\/!\", \"cmd\": 35.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 15.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 20.0, \"b0\": \"Single Line\" }, { \"b1\": \"Thanks for the sub,\", \"cmd\": 35.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 15.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Two Lines (1)\" }, { \"b1\": \"\\\/$subscriber$\\\/!\", \"cmd\": 35.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 15.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Two Lines (2)\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 6.0, \"vis\": 1.0, \"ms\": 15.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Sends a chat message using the variable that was saved in the commands above.\", \"v0\": 1.0 }, { \"b1\": \"\", \"cmd\": 148.0, \"obsid\": \"Main\", \"pos\": 7.0, \"vis\": 1.0, \"ms\": 15.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Thanks for the sub, \\\/$subscriber$\\\/!\" } ], \"press_type\": 0.0, \"x\": 0.29999999999999998889776975374843, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.10000000000000000555111512312578, \"button_id\": \"exampleSubAction\", \"button_duration\": 15.0, \"y\": 0.59999999999999997779553950749687, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 65.0, \"stretch\": 0.0 }, { \"color\": 10830180.0, \"persistent\": 1.0, \"text\": \"Create Clip\\n(API)\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 53.0, \"b0\": \"Creates a clip from your channel's account.\\nThis is effectively the same as making a clip via Twtich's UX,\\nbut in SAMMI button form.\", \"v0\": 0.0, \"comment_color\": 8421376.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 24.0, \"b0\": \"Clears any existing variables within the button to keep things clean,\\nthen creates the \\\"settings\\\" object which will be used later.\", \"v0\": 1.0 }, { \"cmd\": 78.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 127.0, \"b0\": \"(OPTIONAL BUT RECOMMENDED) Also creates a \\\"secrets\\\" object to\\nstore information in. User ID and OAuth shouldn't be visible\\nunless you're specifically TRYING to reveal it, but this adds\\nan extra barrier in the Variable Window by storing it as a\\nseparate object. If you do not want to use this, remove\\nthe \\\"Create Object\\\" line for \\\"secrets\\\" and remove \\\"secrets.\\\"\\nfrom each \\\/$secrets.ID$\\\/ and \\\/$secrets.OAuth$\\\/ variable.\", \"v0\": 1.0 }, { \"cmd\": 16.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"secrets\" }, { \"cmd\": 5.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Twitch API calls to grab needed User ID and OAuth data.\", \"v0\": 3.0 }, { \"b1\": \"secrets.ID\", \"cmd\": 105.0, \"obsid\": \"Main\", \"pos\": 6.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"YOUR CHANNEL HERE\", \"v0\": 0.0 }, { \"b1\": \"secrets.OAuth\", \"cmd\": 105.0, \"obsid\": \"Main\", \"pos\": 7.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"YOUR CHANNEL HERE\", \"v0\": 1.0 }, { \"b1\": \"{\\\"Authorization\\\":\\\"Bearer \\\/$secrets.OAuth$\\\/\\\",\\n\\\"Client-Id\\\":\\\"\\\/$global.twitch_client_id$\\\/\\\",\\n\\\"Content-Type\\\":\\\"application\\\/json\\\"}\", \"cmd\": 168.0, \"obsid\": \"Main\", \"pos\": 8.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 86.0, \"b0\": \"twitchHeader\" }, { \"cmd\": 5.0, \"obsid\": \"Main\", \"pos\": 9.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Creates the clip.\", \"v0\": 1.0 }, { \"b1\": \"POST\", \"b3\": \"\", \"cmd\": 169.0, \"obsid\": \"Main\", \"pos\": 10.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"https:\\\/\\\/api.twitch.tv\\\/helix\\\/clips?broadcaster_id=\\\/$secrets.ID$\\\/\", \"b4\": \"clip\", \"b2\": \"twitchHeader\" }, { \"b1\": \"1000\", \"cmd\": 153.0, \"obsid\": \"Main\", \"pos\": 11.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"clip\" }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 12.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Clip saved as \\\/$clip$\\\/.\" } ], \"press_type\": 0.0, \"x\": 0.10000000000000000555111512312578, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.10000000000000000555111512312578, \"button_id\": \"ID298\", \"button_duration\": 0.0, \"y\": 0.20000000000000001110223024625157, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 65.0, \"stretch\": 0.0 }, { \"color\": 9551906.0, \"persistent\": 1.0, \"text\": \"Display Random\\nImage\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 400.0, \"b0\": \"Change a source to display a random image. This is surprisingly technical, so strap in.\\n\\nThe \\\"Random\\\" command pulls from a set of images in a set location. Each image needs\\na matching name and incrimental numbers. using the example below, the files would be:\\n\\ncatpic1.png, catpic2.png, catpic3.png, catpic4.png, catpic5.png\\n\\nThe name HAS to match the Variable Name, and files must be numbered starting from 1.\\nIf the Variable Name is \\\"slideshow\\\", then the files should be slideshow1, slideshow2,\\nand so on. The \\\"Settings (JSON)\\\" section should also use the file path up to the\\nfolder where images are stored, followed by the variable, and then the file type.\\nThe file path MUST use '\\\/' slashes, not '\\\\' slashes.\\n\\nSo if we had a bunch of JPGs for slideshow...\\n{\\\"file\\\":\\\"D:\\\/Users\\\/Nekomata\\\/Stream\\\/Artwork\\\/\\\/$slideshow$\\\/.JPG\\\"}\\n\\nNote that this just changes the image itself - if you want the image to fade in and\\nout, display for a set time, move, etc., you'll want to combine this with\\n\\\"Motion: Alpha Filter\\\", \\\"Source Change Visibility\\\", or other commands to\\nmanipulate the source.\", \"v0\": 2.0 }, { \"b1\": \"1\", \"cmd\": 77.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"catpic\", \"b2\": \"5\", \"v0\": 0.0 }, { \"b1\": \"{\\\"file\\\":\\\"D:\\\/Users\\\/Nekomata\\\/Stream\\\/PicturesOfCats\\\/\\\/$catpic$\\\/.PNG\\\"}\", \"cmd\": 34.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Source\" } ], \"press_type\": 0.0, \"x\": 0.29999999999999998889776975374843, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.099999999999999977795539507496869, \"button_id\": \"ID299\", \"button_duration\": 0.0, \"y\": 0.80000000000000004440892098500626, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 65.0, \"stretch\": 0.0 }, { \"color\": 105.0, \"persistent\": 1.0, \"text\": \"!!READ ME FIRST!!\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 102.0, \"b0\": \"This deck and the buttons included are provided with no warranty or guarantees.\\n\\nIt's not like pressing one is going to make your PC explode, but I'm just a guy\\ntrying to make fun buttons for other people to use in SAMMI. What works for my\\nenvironment may not work for everyone else's, and I've only got so many options\\nfor testing. But I hope they work for you, and I hope you have fun with them. <3\", \"v0\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 400.0, \"b0\": \"TWITCH BUTTONS (API Calls)\\n\\nBefore using Twitch commands, there are a few things to keep in mind:\\n\\n1.) Your broadcaster account (the one you stream from) and any bot account\\n    should be connected via Twitch Connections in SAMMI Core. SAMMI gives\\n    bot accounts separate scopes (access to different tools that can be\\n    used on your channel) so if something doesn't work on a bot account,\\n    try it via your broadcaster account.\\n2.) All of these buttons will use API calls rather than slash commands.\\n    Twitch will be ending support for slash commands via IRC in February 2023.\\n    While slash commands (like \\\/emoteonly) will still work via web-based Twitch\\n    chat, they will no longer work via SAMMI or other external programs.\\n3.) Always test that each button works before going live! I've made every effort\\n    to make these as easy as possible to work with, but I'm only human, and mistakes\\n    happen. If something isn't working as intended, click Open Variable Window, then\\n    the eye icon next to response. If it says something like this:\\n    {\\\"error\\\":\\\"Unauthorized\\\",\\\"status\\\":401,\\\"message\\\":\\\"Invalid OAuth token\\\"}\\n    It typically means something went wrong, and that you may need to double-check\\n    that you're using the correct name or API call.\", \"v0\": 0.0, \"comment_color\": 10830180.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 150.0, \"b0\": \"TWITCH BUTTONS (SAMMI Commands)\\n\\nCompared to the wall of text above, these are much more simple to use,\\nthough they sometimes offer less flexibility than API calls. Keep in mind:\\n\\n1.) Your broadcaster account (the one you stream from) should be connected\\n    via Twitch Connections in SAMMI Core for most of these to work.\\n2.) Certain buttons will still need you to manually input your channel name.\", \"v0\": 0.0, \"comment_color\": 5385234.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 141.0, \"b0\": \"ALERTS\\n\\nThese are primarily meant to be inspiration for you to make your own alerts, *not*\\n\\\"out of the box\\\" solutions. You can drop your own sources in to get a feel for\\nhow they work, but things will likely not look great until you've gone in and\\nadjusted them yourself.\\nIt's to help you see how the cookies are made, not the cookies themselves, basically,\\nthough... if you're looking at this for alerts, hopefully that's why you're here, yeah?\", \"v0\": 0.0, \"comment_color\": 6908265.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 196.0, \"b0\": \"AUTOMATIONS\\n\\nJust what it says on the tin. *The triggers are ON by default* as an\\nexample of how they work.\\n\\nI recommend setting the triggers for these based on your needs; \\\"out of\\nthe box\\\" the triggers are set for when you start and end streams in OBS,\\nbut those triggers can be deleted or you can disable the entire board\\nuntil you're ready to go (triggers also copy when you copy a button, so\\nkeep that in mind).\", \"v0\": 0.0, \"comment_color\": 3938340.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 110.0, \"b0\": \"THE KITCHEN SINK\\n\\nAll of these run locally via SAMMI and OBS, and are not tied to any specific\\nplatform (unless otherwise stated). These are more jumping off points to make\\nyour own effects, since you'll still need to point them to the sound effects,\\nimages, etc. you want to display.\", \"v0\": 0.0, \"comment_color\": 9551906.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 6.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 216.0, \"b0\": \"BUTTON VARIABLES\\n\\nThis button will set variables for various buttons when SAMMI starts up\\nvia a trigger so that the buttons work correctly the first time you press\\nthem. I'd recommend not touching it unless you're sure of what you're doing.\\n\\nButtons can have an initial variable set by right clicking on them and\\ngoing to \\\"Edit Init Variables\\\", but I find it easier to manage them all\\nin one place rather than on a per-button basis.\\n\\nMore on Variables:\\nhttps:\\\/\\\/sammi.solutions\\\/docs\\\/commands\\\/variables\", \"v0\": 0.0, \"comment_color\": 2098242.0 } ], \"press_type\": 0.0, \"x\": 0.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 1.0, \"button_id\": \"ID300\", \"button_duration\": 0.0, \"y\": 0.0, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 65.0, \"stretch\": 0.0 }, { \"color\": 2098242.0, \"persistent\": 1.0, \"text\": \"Button\\nVariables\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 236.0, \"b0\": \"IMPORTANT: This button contains variables that are used for other buttons in\\n           the example deck.\\n           \\n           If you feel comfortable setting an inital variable for other\\n           buttons, you can do so by right clicking on the button and selecting\\n           \\\"Edit Init Variable\\\" instead. I've opted to include this specific\\n           button with variables to make it easier and more visible to understand\\n           how variables work.\", \"v0\": 0.0, \"comment_color\": 8421376.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 83.0, \"b0\": \"For \\\"Shield Mode Toggle (API)\\\"\\n\\nThe Button ID and the button that has the Shield Mode Toggle (API)\\ncommands must match, or the variable won't be set correctly, and\\nthe button won't work.\", \"v0\": 1.0 }, { \"b1\": \"=\", \"b3\": \"apiShieldMode\", \"cmd\": 160.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"shieldmode\", \"b2\": \"\\\"on\\\"\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 87.0, \"b0\": \"For \\\"Shield Mode Toggle (SAMMI)\\\"\\n\\nThe Button ID and the button that has the Shield Mode Toggle (SAMMI)\\ncommands must match, or the variable won't be set correctly, and\\nthe button won't work.\", \"v0\": 0.0 }, { \"b1\": \"=\", \"b3\": \"sammiShieldMode\", \"cmd\": 160.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"shieldmode\", \"b2\": \"\\\"on\\\"\" } ], \"press_type\": 0.0, \"x\": 0.90000000000000002220446049250313, \"border\": 2.0, \"image\": \"\", \"triggers\": [ { \"group_id\": \"\", \"type\": \"SAMMI Startup\", \"button_id\": \"ID279\", \"trg\": 10.0 } ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.1000000000000000333066907387547, \"button_id\": \"ID279\", \"button_duration\": 0.0, \"y\": 0.90000000000000002220446049250313, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 81.0, \"stretch\": 0.0 }, { \"color\": 3938340.0, \"persistent\": 1.0, \"text\": \"Lock Twitch\\nChat When\\nStream Ends\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 172.0, \"b0\": \"IMPORTANT: This relies on an OBS trigger to fire, causing Twitch chat to\\n           \\\"lock\\\" when a stream ends. To do this, *SAMMI must be running\\n           before the stream ends in OBS*, or the button will fail.\\n           I strongly recommend doing a short test stream of some kind before\\n           before using it for a full live stream.\\n\\n           The button can also be pressed manually in case it doesn't fire\\n           correctly for any reason.\", \"v0\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 69.0, \"b0\": \"Changes the following chat settings:\\nTurns ON Emote Only\\nTurns ON Follower Mode (Must be following for 7 days)\\nClears chat (optional)\", \"v0\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 62.0, \"b0\": \"Clears any existing variables within the button to keep things clean,\\nthen creates the \\\"settings\\\" object which will be used later.\", \"v0\": 3.0 }, { \"cmd\": 78.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"\" }, { \"cmd\": 16.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"settings\" }, { \"cmd\": 16.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"secrets\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 6.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"emote_mode: Sets chat to Emote Only Mode\", \"v0\": 1.0 }, { \"b1\": \"emote_mode\", \"cmd\": 165.0, \"obsid\": \"Main\", \"pos\": 7.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"settings\", \"b2\": \"true\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 8.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 275.0, \"b0\": \"follower_mode: \\\"true\\\" sets chat to Followers Only mode.\\n\\n(OPTIONAL, BUT HIGHLY RECOMMENDED)\\nfollower_mode_duration: The number under Variable\\\/Number\\\/'String' will set\\n     a value, in minutes, for how long someone must be following the channel to\\n     chat. If NO value is set, this defaults to 0 minutes, meaning anyone can\\n     follow and send a message immediately after.\\n\\nQuick Conversions:\\n360 minutes   = 6  hours\\n1440 minutes  = 24 hours\\n2880 minutes  = 48 hours\\n10080 minutes = 7  days\\n43200 minutes = 30 days\", \"v0\": 2.0 }, { \"b1\": \"follower_mode\", \"cmd\": 165.0, \"obsid\": \"Main\", \"pos\": 9.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"settings\", \"b2\": \"true\" }, { \"b1\": \"follower_mode_duration\", \"cmd\": 165.0, \"obsid\": \"Main\", \"pos\": 10.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"settings\", \"b2\": \"10080\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 11.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 125.0, \"b0\": \"Turns all the objects from the steps above into a string, then saves it as a\\nvariable named \\\"settingsString\\\". This will allow you to use the settingsString\\nvariable later on without having to type out follower_mode, follower_mode_duration,\\nemote_mode, etc.\\nYou can add additional options here, as well, such as Slow Mode, Unique Chat Mode,\\nSubscriber Mode, etc.\\nMore info: https:\\\/\\\/dev.twitch.tv\\\/docs\\\/api\\\/reference#get-chat-settings\\n\", \"v0\": 1.0 }, { \"b1\": \"settings\", \"cmd\": 18.0, \"obsid\": \"Main\", \"pos\": 12.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"settingsString\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 13.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 84.0, \"b0\": \"Gets relevant info from Twitch about your user ID and OAuth token so that it can\\nbe used in the HTTP request below.\\nLogin Name for ID and OAuth should be your channel name (i.e. the Broadcaster).\\n(OPTIONAL) Login Name for botID and botOAuth should be used if you have a separate moderator bot\\nor account that you've created and manage for your channel that you want to use.\", \"v0\": 6.0 }, { \"b1\": \"secrets.ID\", \"cmd\": 105.0, \"obsid\": \"Main\", \"pos\": 14.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"YOUR CHANNEL HERE\", \"v0\": 0.0 }, { \"b1\": \"secrets.OAuth\", \"cmd\": 105.0, \"obsid\": \"Main\", \"pos\": 15.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"YOUR CHANNEL HERE\", \"v0\": 1.0 }, { \"b1\": \"secrets.botID\", \"cmd\": 105.0, \"obsid\": \"Main\", \"pos\": 16.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 1.0, \"xpan\": 0.0, \"b0\": \"YOUR BOT HERE\", \"v0\": 0.0 }, { \"b1\": \"secrets.botOAuth\", \"cmd\": 105.0, \"obsid\": \"Main\", \"pos\": 17.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 1.0, \"xpan\": 0.0, \"b0\": \"YOUR BOT HERE\", \"v0\": 1.0 }, { \"cmd\": 5.0, \"obsid\": \"Main\", \"pos\": 18.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 172.0, \"b0\": \"If you're using your own account to run the commands, String Array\\\/JSON is:\\n{\\\"Authorization\\\":\\\"Bearer \\\/$secrets.OAuth$\\\/\\\",\\n\\\"Client-Id\\\":\\\"\\\/$global.twitch_client_id$\\\/\\\",\\n\\\"Content-Type\\\":\\\"application\\\/json\\\"}\\n\\n(OPTIONAL) If you're using a bot account to run the commands, String Array\\\/JSON is:\\n{\\\"Authorization\\\":\\\"Bearer \\\/$secrets.botOAuth$\\\/\\\",\\n\\\"Client-Id\\\":\\\"\\\/$global.twitch_client_id$\\\/\\\",\\n\\\"Content-Type\\\":\\\"application\\\/json\\\"}\", \"v0\": 1.0 }, { \"b1\": \"{\\\"Authorization\\\":\\\"Bearer \\\/$secrets.OAuth$\\\/\\\",\\n\\\"Client-Id\\\":\\\"\\\/$global.twitch_client_id$\\\/\\\",\\n\\\"Content-Type\\\":\\\"application\\\/json\\\"}\", \"cmd\": 168.0, \"obsid\": \"Main\", \"pos\": 19.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 86.0, \"b0\": \"twitchHeader\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 20.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 27.0, \"b0\": \"Uses the commands above, saved to the settingsString variable, to initiate a\\nHTTP request.\", \"v0\": 1.0 }, { \"b1\": \"PATCH\", \"b3\": \"\\\/$settingsString$\\\/\", \"cmd\": 169.0, \"obsid\": \"Main\", \"pos\": 21.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"https:\\\/\\\/api.twitch.tv\\\/helix\\\/chat\\\/settings?broadcaster_id=\\\/$secrets.ID$\\\/&moderator_id=\\\/$secrets.botID$\\\/\", \"b4\": \"response\", \"b2\": \"twitchHeader\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 22.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 105.0, \"b0\": \"Waits for the \\\"response\\\" variable to exist to prevent the button from misfiring or\\nhanging indefinitely. The variable is also saved as a local variable, so you can\\ncheck on it with the \\\"Open Variable Window\\\" button below and looking at what's under\\nthe \\\"response\\\" variable. This is useful for troubleshooting, as well, as you can see\\nif the button worked (it will return a long string of information about the status of\\nchat) or if it errored out (it will return an error, along with the error status).\", \"v0\": 1.0 }, { \"b1\": \"1000\", \"cmd\": 153.0, \"obsid\": \"Main\", \"pos\": 23.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"response\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 24.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 110.0, \"b0\": \"(OPTIONAL)\\nSends an announcement in chat. Useful as both a notification that the stream has ended\\nas well as quickly identifying that the command worked.\\n\\nThis will use the account marked as \\\"Join chat under this name\\\" in the Twitch settings\\nof SAMMI Core.\", \"v0\": 1.0 }, { \"b1\": \"YOUR CHANNEL HERE\", \"cmd\": 241.0, \"v1\": 0.0, \"obsid\": \"Main\", \"pos\": 25.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Thanks for watching!\" } ], \"press_type\": 0.0, \"x\": 0.59999999999999997779553950749687, \"border\": 2.0, \"image\": \"\", \"triggers\": [ { \"turntorealm\": 0.0, \"updatetype\": \"StreamStarted\", \"obs\": \"Any\", \"group_id\": \"\", \"button_id\": \"ID297\", \"trg\": 9.0 } ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.10000000000000000555111512312578, \"button_id\": \"ID297\", \"button_duration\": 0.0, \"y\": 0.5, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 81.0, \"stretch\": 0.0 }, { \"color\": 12632256.0, \"persistent\": 1.0, \"text\": \"Automations\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ ], \"press_type\": 0.0, \"x\": 0.5, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.5, \"button_id\": \"ID301\", \"button_duration\": 0.0, \"y\": 0.40000000000000002220446049250313, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 64.0, \"stretch\": 0.0 }, { \"color\": 3938340.0, \"persistent\": 1.0, \"text\": \"Unlock Twitch\\nChat When\\nStream Starts\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 150.0, \"b0\": \"IMPORTANT: This relies on an OBS trigger to fire, causing Twitch chat to\\n           \\\"unlock\\\" when a stream starts. To do this, *SAMMI must be running\\n           before a stream starts in OBS*, or the button will fail.\\n           I strongly recommend doing a short test stream of some kind before\\n           before using it for a full live stream.\\n\\n           The button can also be pressed manually in case it doesn't fire\\n           correctly for any reason.\\n\", \"v0\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Twitch API Calls\", \"v0\": 22.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 21.0, \"b0\": \"Clears any existing variables within the button to keep things clean,\\nthen creates the \\\"settings\\\" variable which will be used later.\", \"v0\": 2.0 }, { \"cmd\": 78.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"\" }, { \"cmd\": 16.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"settings\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"emote_mode: Turns off Emote Only Mode.\", \"v0\": 1.0 }, { \"b1\": \"emote_mode\", \"cmd\": 165.0, \"obsid\": \"Main\", \"pos\": 6.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"settings\", \"b2\": \"false\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 7.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 1.0, \"b0\": \"follower_mode: \\\"false\\\" turns off Followers Only mode.\\n\", \"v0\": 1.0 }, { \"b1\": \"follower_mode\", \"cmd\": 165.0, \"obsid\": \"Main\", \"pos\": 8.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"settings\", \"b2\": \"false\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 9.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 124.0, \"b0\": \"Turns all the objects from the steps above into a string, then saves it as a\\nvariable named \\\"settingsString\\\". This will allow you to use the settingsString\\nvariable later on without having to type out follower_mode, follower_mode_duration,\\nemote_mode, etc.\\nYou can add additional options here, as well, such as Slow Mode, Unique Chat Mode,\\nSubscriber Mode, etc.\\nMore info: https:\\\/\\\/dev.twitch.tv\\\/docs\\\/api\\\/reference#get-chat-settings\\n\", \"v0\": 1.0 }, { \"b1\": \"settings\", \"cmd\": 18.0, \"obsid\": \"Main\", \"pos\": 10.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"settingsString\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 11.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 105.0, \"b0\": \"Gets relevant info from Twitch about your user ID and OAuth token so that it can\\nbe used in the HTTP request below.\\nLogin Name for ID and OAuth should be your channel name (i.e. the Broadcaster).\\n\\n(OPTIONAL) Login Name for botID and botOAuth should be used if you have a separate moderator bot\\nor account that you've created and manage for your channel that you want to use.\", \"v0\": 6.0 }, { \"b1\": \"ID\", \"cmd\": 105.0, \"obsid\": \"Main\", \"pos\": 12.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"YOUR CHANNEL HERE\", \"v0\": 0.0 }, { \"b1\": \"OAuth\", \"cmd\": 105.0, \"obsid\": \"Main\", \"pos\": 13.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"YOUR CHANNEL HERE\", \"v0\": 1.0 }, { \"b1\": \"botID\", \"cmd\": 105.0, \"obsid\": \"Main\", \"pos\": 14.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 1.0, \"xpan\": 0.0, \"b0\": \"YOUR BOT HERE\", \"v0\": 0.0 }, { \"b1\": \"botOAuth\", \"cmd\": 105.0, \"obsid\": \"Main\", \"pos\": 15.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 1.0, \"xpan\": 0.0, \"b0\": \"YOUR BOT HERE\", \"v0\": 1.0 }, { \"cmd\": 5.0, \"obsid\": \"Main\", \"pos\": 16.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 172.0, \"b0\": \"If you're using your own account to run the commands, String Array\\\/JSON is:\\n{\\\"Authorization\\\":\\\"Bearer \\\/$OAuth$\\\/\\\",\\n\\\"Client-Id\\\":\\\"\\\/$global.twitch_client_id$\\\/\\\",\\n\\\"Content-Type\\\":\\\"application\\\/json\\\"}\\n\\n(OPTIONAL) If you're using a bot account to run the commands, String Array\\\/JSON is:\\n{\\\"Authorization\\\":\\\"Bearer \\\/$botOAuth$\\\/\\\",\\n\\\"Client-Id\\\":\\\"\\\/$global.twitch_client_id$\\\/\\\",\\n\\\"Content-Type\\\":\\\"application\\\/json\\\"}\", \"v0\": 1.0 }, { \"b1\": \"{\\\"Authorization\\\":\\\"Bearer \\\/$OAuth$\\\/\\\",\\n\\\"Client-Id\\\":\\\"\\\/$global.twitch_client_id$\\\/\\\",\\n\\\"Content-Type\\\":\\\"application\\\/json\\\"}\", \"cmd\": 168.0, \"obsid\": \"Main\", \"pos\": 17.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 86.0, \"b0\": \"twitchHeader\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 18.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 150.0, \"b0\": \"Uses the commands above, saved to the settingsString variable, to initiate a\\nHTTP request.\\n\\nIf you're using your own account to run the commands, URL is:\\nhttps:\\\/\\\/api.twitch.tv\\\/helix\\\/chat\\\/settings?broadcaster_id=\\\/$ID$\\\/&moderator_id=\\\/$ID$\\\/\\n\\n(OPTIONAL) If you're using a bot account to run the commands, URL is:\\nhttps:\\\/\\\/api.twitch.tv\\\/helix\\\/chat\\\/settings?broadcaster_id=\\\/$ID$\\\/&moderator_id=\\\/$botID$\\\/\", \"v0\": 1.0 }, { \"b1\": \"PATCH\", \"b3\": \"\\\/$settingsString$\\\/\", \"cmd\": 169.0, \"obsid\": \"Main\", \"pos\": 19.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"https:\\\/\\\/api.twitch.tv\\\/helix\\\/chat\\\/settings?broadcaster_id=\\\/$ID$\\\/&moderator_id=\\\/$ID$\\\/\", \"b4\": \"response\", \"b2\": \"twitchHeader\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 20.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 171.0, \"b0\": \"(OPTIONAL)\\nClears the chat. Useful if you want to make sure there's no nasty\\nmessages that show up when you start a stream.\\n\\nIf you're using your own account to run the commands, URL is:\\nhttps:\\\/\\\/api.twitch.tv\\\/helix\\\/moderation\\\/chat?broadcaster_id=\\\/$ID$\\\/&moderator_id=\\\/$ID$\\\/\\n\\nIf you're using a bot account to run the commands, URL is:\\nhttps:\\\/\\\/api.twitch.tv\\\/helix\\\/chat\\\/settings?broadcaster_id=\\\/$ID$\\\/&moderator_id=\\\/$botID$\\\/\", \"v0\": 1.0 }, { \"b1\": \"DELETE\", \"b3\": \"\", \"cmd\": 169.0, \"obsid\": \"Main\", \"pos\": 21.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"https:\\\/\\\/api.twitch.tv\\\/helix\\\/moderation\\\/chat?broadcaster_id=\\\/$ID$\\\/&moderator_id=\\\/$ID$\\\/\", \"b4\": \"response\", \"b2\": \"twitchHeader\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 22.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 105.0, \"b0\": \"Waits for the \\\"response\\\" variable to exist to prevent the button from misfiring or\\nhanging indefinitely. The variable is also saved as a local variable, so you can\\ncheck on it with the \\\"Open Variable Window\\\" button below and looking at what's under\\nthe \\\"response\\\" variable. This is useful for troubleshooting, as well, as you can see\\nif the button worked (it will return a long string of information about the status of\\nchat) or if it errored out (it will return an error, along with the error status).\", \"v0\": 1.0 }, { \"b1\": \"1000\", \"cmd\": 153.0, \"obsid\": \"Main\", \"pos\": 23.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"response\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 24.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 105.0, \"b0\": \"(OPTIONAL)\\nSends an announcement in chat. Useful as both a notification that the stream is live\\nas well as quickly identifying that the command worked.\\n\\nThis will use the account marked as \\\"Join chat under this name\\\" in the Twitch settings\\nof SAMMI Core.\", \"v0\": 1.0 }, { \"b1\": \"YOUR CHANNEL HERE\", \"cmd\": 241.0, \"v1\": 0.0, \"obsid\": \"Main\", \"pos\": 25.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"The stream is live!\" } ], \"press_type\": 0.0, \"x\": 0.5, \"border\": 2.0, \"image\": \"\", \"triggers\": [ { \"turntorealm\": 0.0, \"updatetype\": \"StreamStopped\", \"obs\": \"Any\", \"group_id\": \"\", \"button_id\": \"ID302\", \"trg\": 9.0 } ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.10000000000000000555111512312578, \"button_id\": \"ID302\", \"button_duration\": 0.0, \"y\": 0.5, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 81.0, \"stretch\": 0.0 }, { \"color\": 5385234.0, \"persistent\": 1.0, \"text\": \"Announcement\\n(SAMMI)\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 114.0, \"b0\": \"Brings up a dialogue box in SAMMI to enter your own announcement message.\\n\\nThis will use the account that's marked as \\\"Join channel under this name\\\"\\nin SAMMI Core. If you'd like more granular control over what account sends\\na message and what color it shows up as, consider the \\\"Announcement (Twitch API)\\\"\\nbutton instead.\", \"v0\": 0.0, \"comment_color\": 8421376.0 }, { \"cmd\": 78.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"all\" }, { \"b1\": \"\", \"cmd\": 214.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Enter Announcement:\", \"b2\": \"announcement\" }, { \"b1\": \"superretroheart\", \"cmd\": 241.0, \"v1\": 0.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 10.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"\\\/$announcement$\\\/\" } ], \"press_type\": 0.0, \"x\": 0.5, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.10000000000000000555111512312578, \"button_id\": \"ID306\", \"button_duration\": 10.0, \"y\": 0.20000000000000001110223024625157, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 65.0, \"stretch\": 0.0 }, { \"color\": 12632256.0, \"persistent\": 1.0, \"text\": \"Alerts\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ ], \"press_type\": 0.0, \"x\": 0.0, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.5, \"button_id\": \"ID308\", \"button_duration\": 0.0, \"y\": 0.40000000000000002220446049250313, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 64.0, \"stretch\": 0.0 }, { \"color\": 5385234.0, \"persistent\": 1.0, \"text\": \"Create Clip\\n(SAMMI)\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 53.0, \"b0\": \"Creates a clip from your channel's account.\\nThis is effectively the same as making a clip via Twtich's UX,\\nbut in SAMMI button form.\", \"v0\": 0.0, \"comment_color\": 8421376.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 110.0, \"b0\": \"Just what it says on the tin.\\n\\n\\\"Save Variable As\\\" is optional, but can be useful to make sure\\nthat the clip was created by including a \\\"Wait until variable exists\\\"\\nor to copy the randomly generated name of the clip itself.\", \"v0\": 0.0 }, { \"b1\": \"\\\/$clip$\\\/\", \"cmd\": 188.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"YOUR CHANNEL HERE\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 81.0, \"b0\": \"(OPTIONAL)\\nChecks to see if the clip was created by including a \\\"Wait until\\nvariable exists\\\" to copy the randomly generated name of the clip itself,\\nthen prints it as pop-up announcement in SAMMI.\", \"v0\": 2.0 }, { \"b1\": \"1000\", \"cmd\": 153.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"clip\" }, { \"cmd\": 142.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Clip saved as \\\/$clip$\\\/.\" } ], \"press_type\": 0.0, \"x\": 0.59999999999999997779553950749687, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.10000000000000000555111512312578, \"button_id\": \"ID310\", \"button_duration\": 0.0, \"y\": 0.20000000000000001110223024625157, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 65.0, \"stretch\": 0.0 }, { \"color\": 5385234.0, \"persistent\": 1.0, \"text\": \"Run Commercial\\n60s\\n(SAMMI)\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 101.0, \"b0\": \"IMPORTANT: This should be used only if you plan on running additional ads outside\\n           of scheduled Twitch ads or ads played via the Twitch Dashboard (or an\\n           OBS dock). It's NOT a replacement for the ad schedule.\\n           Running an ad via this method, can - and likely will - run an ad on top\\n           an existing ad block, causing the ad block to run longer than intended.\", \"v0\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 167.0, \"b0\": \"Immediately runs a 60-second commercial via SAMMI command.\\nThe Duration box can be changed.\\n\\nValid durations: 30, 60, 90, 120, 150, 180\\n\\\"length\\\" is how long the ad will run in seconds. Twitch tends\\nto run ads in 30-second blocks, so if you use a different value,\\nTwitch will try to run an ad close to the value you entered.\\n\\nThe variable is optional, but can be useful for troubleshooting.\", \"v0\": 0.0 }, { \"b1\": \"60\", \"cmd\": 266.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"YOUR CHANNEL NAME HERE\", \"b2\": \"adbreak\" }, { \"b1\": \"1000\", \"cmd\": 153.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"adbreak\" } ], \"press_type\": 0.0, \"x\": 0.69999999999999995559107901499374, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.10000000000000000555111512312578, \"button_id\": \"ID311\", \"button_duration\": 0.0, \"y\": 0.20000000000000001110223024625157, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 65.0, \"stretch\": 0.0 }, { \"color\": 10830180.0, \"persistent\": 1.0, \"text\": \"Shield Mode\\nToggle\\n(API)\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 210.0, \"b0\": \"IMPORTANT: This button works as a toggle to turn Shield Mode on and off.\\n           A default variable is supplied by the \\\"Button Variables\\\" button\\n           included in the Example Deck to instruct this button to run the\\n           \\\"on\\\" commands when it's pressed once, and then run the \\\"off\\\"\\n           commands when it's pressed again. It will toggle between these\\n           indefinitely until SAMMI stops running.\\n\\n           If you feel comfortable setting an inital variable, you can do so\\n           by right clicking on the button and selecting \\\"Edit Init Variable\\\"\\n           instead. I've opted to include a separate button with variables to\\n           make it easier and more visible to understand how variables work.\", \"v0\": 0.0 }, { \"cmd\": 24.0, \"obsid\": \"Main\", \"pos\": 1.0, \"v3\": { \"default\": 0.0, \"on\": 2.0, \"off\": 17.0 }, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"shieldmode\", \"v0\": 29.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 25.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"on\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 14.0, \"v2\": 1.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 110.0, \"b0\": \"(OPTIONAL BUT RECOMMENDED) Creates a \\\"secrets\\\" object to\\nstore information in. User ID and OAuth shouldn't be visible\\nunless you're specifically TRYING to reveal it, but this adds\\nan extra barrier in the Variable Window by storing it as a\\nseparate object. Only remove this if you absolutely know\\nwhat you're doing.\", \"v0\": 2.0 }, { \"cmd\": 78.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"\" }, { \"cmd\": 16.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"secrets\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 6.0, \"vis\": 1.0, \"ms\": 25.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Twitch API Calls\", \"v0\": 4.0 }, { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 7.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 104.0, \"b0\": \"This set of commands will make sure the command is coming from\\nyour broadcaster ID. This *should not* be handled by a channel bot\\ndue to how scopes for bots are handled in SAMMI (you would need to\\nadd it yourself).\", \"v0\": 3.0 }, { \"b1\": \"secrets.ID\", \"cmd\": 105.0, \"obsid\": \"Main\", \"pos\": 8.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"YOUR CHANNEL NAME HERE\", \"v0\": 0.0 }, { \"b1\": \"secrets.OAuth\", \"cmd\": 105.0, \"obsid\": \"Main\", \"pos\": 9.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"YOUR CHANNEL NAME HERE\", \"v0\": 1.0 }, { \"b1\": \"{\\\"Authorization\\\":\\\"Bearer \\\/$secrets.OAuth$\\\/\\\",\\n\\\"Client-Id\\\":\\\"\\\/$global.twitch_client_id$\\\/\\\",\\n\\\"Content-Type\\\":\\\"application\\\/json\\\"}\", \"cmd\": 168.0, \"obsid\": \"Main\", \"pos\": 10.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 86.0, \"b0\": \"twitchHeader\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 11.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 7.0, \"b0\": \"Turns on Shield Mode via HTTP request and the Twitch API.\", \"v0\": 1.0 }, { \"b1\": \"PUT\", \"b3\": \"{\\\"is_active\\\":true}\", \"cmd\": 169.0, \"obsid\": \"Main\", \"pos\": 12.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"https:\\\/\\\/api.twitch.tv\\\/helix\\\/moderation\\\/shield_mode?broadcaster_id=\\\/$secrets.ID$\\\/&moderator_id=\\\/$secrets.ID$\\\/\", \"b4\": \"response\", \"b2\": \"twitchHeader\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 13.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 105.0, \"b0\": \"Waits for the \\\"response\\\" variable to exist to prevent the button from misfiring or\\nhanging indefinitely. The variable is also saved as a local variable, so you can\\ncheck on it with the \\\"Open Variable Window\\\" button below and looking at what's under\\nthe \\\"response\\\" variable. This is useful for troubleshooting, as well, as you can see\\nif the button worked (it will return a long string of information about the status of\\nchat) or if it errored out (it will return an error, along with the error status).\", \"v0\": 1.0 }, { \"b1\": \"1000\", \"cmd\": 153.0, \"obsid\": \"Main\", \"pos\": 14.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"response\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 15.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 22.0, \"b0\": \"Sets a local variable so the button will turn \\\"off\\\" when it's pressed again.\", \"v0\": 1.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 16.0, \"vis\": 1.0, \"ms\": 25.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"shieldmode\", \"b2\": \"\\\"off\\\"\" }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 17.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"off\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 13.0, \"v2\": 1.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 18.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 110.0, \"b0\": \"(OPTIONAL BUT RECOMMENDED) Creates a \\\"secrets\\\" object to\\nstore information in. User ID and OAuth shouldn't be visible\\nunless you're specifically TRYING to reveal it, but this adds\\nan extra barrier in the Variable Window by storing it as a\\nseparate object. Only remove this if you absolutely know\\nwhat you're doing.\", \"v0\": 2.0 }, { \"cmd\": 78.0, \"obsid\": \"Main\", \"pos\": 19.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"\" }, { \"cmd\": 16.0, \"obsid\": \"Main\", \"pos\": 20.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"secrets\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 21.0, \"vis\": 1.0, \"ms\": 25.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Twitch API Calls\", \"v0\": 4.0 }, { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 22.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 71.0, \"b0\": \"This set of commands will make sure the command is coming from\\nyour broadcaster ID. This *should not* be handled by a channel bot\\ndue to how scopes for bots are handled in SAMMI (you would need to\\nadd it yourself).\", \"v0\": 3.0 }, { \"b1\": \"secrets.ID\", \"cmd\": 105.0, \"obsid\": \"Main\", \"pos\": 23.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"YOUR CHANNEL NAME HERE\", \"v0\": 0.0 }, { \"b1\": \"secrets.OAuth\", \"cmd\": 105.0, \"obsid\": \"Main\", \"pos\": 24.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"YOUR CHANNEL NAME HERE\", \"v0\": 1.0 }, { \"b1\": \"{\\\"Authorization\\\":\\\"Bearer \\\/$secrets.OAuth$\\\/\\\",\\n\\\"Client-Id\\\":\\\"\\\/$global.twitch_client_id$\\\/\\\",\\n\\\"Content-Type\\\":\\\"application\\\/json\\\"}\", \"cmd\": 168.0, \"obsid\": \"Main\", \"pos\": 25.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 86.0, \"b0\": \"twitchHeader\" }, { \"b1\": \"PUT\", \"b3\": \"{\\\"is_active\\\":false}\", \"cmd\": 169.0, \"obsid\": \"Main\", \"pos\": 26.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"https:\\\/\\\/api.twitch.tv\\\/helix\\\/moderation\\\/shield_mode?broadcaster_id=\\\/$secrets.ID$\\\/&moderator_id=\\\/$secrets.ID$\\\/\", \"b4\": \"response\", \"b2\": \"twitchHeader\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 27.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 105.0, \"b0\": \"Waits for the \\\"response\\\" variable to exist to prevent the button\\nfrom misfiring or hanging indefinitely. The variable is also saved as a local variable,\\nso you can check on it with the \\\"Open Variable Window\\\" button below and looking at\\nwhat's under the \\\"response\\\" variable. This is useful for troubleshooting, as well, as\\nyou can see if the button worked (it will return a long string of information about the\\nstatus of chat) or if it errored out (it will return an error, along with the error status).\", \"v0\": 1.0 }, { \"b1\": \"1000\", \"cmd\": 153.0, \"obsid\": \"Main\", \"pos\": 28.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"response\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 29.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 16.0, \"b0\": \"Sets a local variable so the button will turn \\\"off\\\" when it's pressed again.\", \"v0\": 1.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 30.0, \"vis\": 1.0, \"ms\": 25.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"shieldmode\", \"b2\": \"\\\"on\\\"\" } ], \"press_type\": 0.0, \"x\": 0.40000000000000002220446049250313, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.10000000000000000555111512312578, \"button_id\": \"apiShieldMode\", \"button_duration\": 25.0, \"y\": 0.20000000000000001110223024625157, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 65.0, \"stretch\": 0.0 }, { \"color\": 5385234.0, \"persistent\": 1.0, \"text\": \"Shield Mode\\nToggle\\n(SAMMI)\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 210.0, \"b0\": \"IMPORTANT: This button works as a toggle to turn Shield Mode on and off.\\n           A default variable is supplied by the \\\"Button Variables\\\" button\\n           included in the Example Deck to instruct this button to run the\\n           \\\"on\\\" commands when it's pressed once, and then run the \\\"off\\\"\\n           commands when it's pressed again. It will toggle between these\\n           indefinitely until SAMMI stops running.\\n\\n           If you feel comfortable setting an inital variable, you can do so\\n           by right clicking on the button and selecting \\\"Edit Init Variable\\\"\\n           instead. I've opted to include a separate button with variables to\\n           make it easier and more visible to understand how variables work.\", \"v0\": 0.0 }, { \"cmd\": 24.0, \"obsid\": \"Main\", \"pos\": 1.0, \"v3\": { \"default\": 0.0, \"on\": 2.0, \"off\": 5.0 }, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"shieldmode\", \"v0\": 6.0 }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 25.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"on\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 2.0, \"v2\": 1.0 }, { \"cmd\": 269.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 25.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"YOUR CHANNEL NAME HERE\", \"v0\": 0.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 25.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"shieldmode\", \"b2\": \"\\\"off\\\"\" }, { \"b5\": \"\", \"b13\": \"\", \"b19\": \"\", \"b17\": \"\", \"b1\": \"\", \"b7\": \"\", \"b11\": \"\", \"b9\": \"\", \"b15\": \"\", \"b3\": \"\", \"cmd\": 26.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b16\": \"\", \"b0\": \"off\", \"b18\": \"\", \"b4\": \"\", \"b12\": \"\", \"b14\": \"\", \"b2\": \"\", \"b8\": \"\", \"b6\": \"\", \"b10\": \"\", \"v0\": 2.0, \"v2\": 1.0 }, { \"cmd\": 269.0, \"obsid\": \"Main\", \"pos\": 6.0, \"vis\": 1.0, \"ms\": 25.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"YOUR CHANNEL NAME HERE\", \"v0\": 1.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 7.0, \"vis\": 1.0, \"ms\": 25.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"shieldmode\", \"b2\": \"\\\"on\\\"\" } ], \"press_type\": 0.0, \"x\": 0.90000000000000002220446049250313, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.10000000000000000555111512312578, \"button_id\": \"sammiShieldMode\", \"button_duration\": 25.0, \"y\": 0.20000000000000001110223024625157, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 65.0, \"stretch\": 0.0 }, { \"color\": 12632256.0, \"persistent\": 1.0, \"text\": \"Misc.\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ ], \"press_type\": 0.0, \"x\": 0.5, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.5, \"button_id\": \"ID313\", \"button_duration\": 0.0, \"y\": 0.69999999999999995559107901499374, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 64.0, \"stretch\": 0.0 }, { \"color\": 9551906.0, \"persistent\": 1.0, \"text\": \"Display Random\\nVideo\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 302.0, \"b0\": \"Uses the \\\"Random\\\" command to pull from a set of videos in a set location,\\neach with a matching name and incrimental numbers. Using the example below,\\nthe files would be:\\n\\nvideo1.mp4, video2.mp4, video3.mp4\\n\\nThis differs slightly from random images. \\\"local_file\\\" should be used instead of\\njust \\\"file\\\". You'll also need to use the full file path, but also add an\\nadditional \\\/filename\\\/ directory between the file path and the variable. Files\\nmust be numbered starting from 1. The variable name does not affect the file\\npath in this case, but all files should follow the same naming scheme of name\\nthen number.\\n\\nSo if we had a bunch of MP4s:\\n{\\\"local_file\\\":\\\"D:\\\/Users\\\/Nekomata\\\/Stream\\\/VideosOfCats\\\/video\\\/$randomvideo$\\\/.mp4\\\"}\", \"v0\": 2.0 }, { \"b1\": \"1\", \"cmd\": 77.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"randomvideo\", \"b2\": \"3\", \"v0\": 0.0 }, { \"b1\": \"{\\\"local_file\\\":\\\"D:\\\/Users\\\/Nekomata\\\/Stream\\\/VideosOfCats\\\/video\\\/$randomvideo$\\\/.mp4\\\"}\", \"cmd\": 34.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 75.0, \"b0\": \"Source\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 61.0, \"b0\": \"Videos played in this method will take on the settings of the source they've been assigned to.\\nFor example, if a video source is set to loop, a random video that's played on that source\\nwill also loop indefinitely. Be mindful of what source you're sending a video to!\", \"v0\": 0.0 } ], \"press_type\": 0.0, \"x\": 0.40000000000000002220446049250313, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.099999999999999977795539507496869, \"button_id\": \"ID295\", \"button_duration\": 0.0, \"y\": 0.80000000000000004440892098500626, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 65.0, \"stretch\": 0.0 }, { \"color\": 10830180.0, \"persistent\": 1.0, \"text\": \"Run Commercial\\nAnnounce & Delay\\n(API)\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 101.0, \"b0\": \"IMPORTANT: This should be used only if you plan on running additional ads outside\\n           of scheduled Twitch ads or ads played via the Twitch Dashboard (or an\\n           OBS dock). It's NOT a replacement for the ad schedule.\\n           Running an ad via this method, can - and likely will - run an ad on top\\n           an existing ad block, causing the ad block to run longer than intended.\", \"v0\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 24.0, \"b0\": \"Makes an announcement in chat that a commercial will be starting soon.\\nAfter 60 seconds have passed, attempts to start a 60-second ad break.\", \"v0\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 44.0, \"b0\": \"Clears any existing variables within the button to keep things clean.\\nLeaving the field empty or putting \\\"all\\\" (without quotes) will have\\nthe same effect.\", \"v0\": 1.0 }, { \"cmd\": 78.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 106.0, \"b0\": \"(OPTIONAL BUT RECOMMENDED) Creates a \\\"secrets\\\" object to\\nstore information in. User ID and OAuth shouldn't be visible\\nunless you're specifically TRYING to reveal it, but this adds\\nan extra barrier in the Variable Window by storing it as a\\nseparate object. Only remove this if you absolutely know\\nwhat you're doing.\\n\\n\", \"v0\": 2.0 }, { \"cmd\": 78.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"\" }, { \"cmd\": 16.0, \"obsid\": \"Main\", \"pos\": 6.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"secrets\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 7.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Twitch API Calls\", \"v0\": 3.0 }, { \"b1\": \"secrets.ID\", \"cmd\": 105.0, \"obsid\": \"Main\", \"pos\": 8.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"superretroheart\", \"v0\": 0.0 }, { \"b1\": \"secrets.OAuth\", \"cmd\": 105.0, \"obsid\": \"Main\", \"pos\": 9.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"superretroheart\", \"v0\": 1.0 }, { \"b1\": \"{\\\"Authorization\\\":\\\"Bearer \\\/$secrets.OAuth$\\\/\\\",\\n\\\"Client-Id\\\":\\\"\\\/$global.twitch_client_id$\\\/\\\",\\n\\\"Content-Type\\\":\\\"application\\\/json\\\"}\", \"cmd\": 168.0, \"obsid\": \"Main\", \"pos\": 10.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 47.0, \"b0\": \"twitchHeader\" }, { \"cmd\": 5.0, \"obsid\": \"Main\", \"pos\": 11.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 64.0, \"b0\": \"Sets the text for the announcement.\\nThe text in Variable\\\/Number\\\/'String' must be wrapped in quotes,\\nor the string won't work correctly. (The quotes won't show up\\nin the announcement itself.)\", \"v0\": 1.0 }, { \"b1\": \"=\", \"cmd\": 15.0, \"obsid\": \"Main\", \"pos\": 12.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"adbreakannounce\", \"b2\": \"\\\"An ad break starts in 60 seconds! Hold tight, we'll be right back after.\\\"\" }, { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 13.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 20.0, \"b0\": \"Use this command if you're sending the announcement from your channel account,\\ni.e. \\\"LizardFriend\\\".\", \"v0\": 2.0 }, { \"b1\": \"POST\", \"b3\": \"{\\\"message\\\":\\\"\\\/$adbreakannounce$\\\/\\\",\\\"color\\\":\\\"primary\\\"}\", \"cmd\": 169.0, \"obsid\": \"Main\", \"pos\": 14.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"https:\\\/\\\/api.twitch.tv\\\/helix\\\/chat\\\/announcements?broadcaster_id=\\\/$secrets.ID$\\\/&moderator_id=\\\/$secrets.ID$\\\/\", \"b4\": \"response\", \"b2\": \"twitchHeader\" }, { \"b1\": \"1000\", \"cmd\": 153.0, \"obsid\": \"Main\", \"pos\": 15.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"announceresponse\" }, { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 16.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 1.0, \"xpan\": 17.0, \"b0\": \"Use this command if you're sending the announcement from a separate \\\"bot\\\" account\\nyou manage, i.e. \\\"LizardBot\\\".\", \"v0\": 1.0 }, { \"b1\": \"POST\", \"b3\": \"{\\\"message\\\":\\\"\\\/$adbreakannounce$\\\/\\\",\\\"color\\\":\\\"default\\\"}\", \"cmd\": 169.0, \"obsid\": \"Main\", \"pos\": 17.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"https:\\\/\\\/api.twitch.tv\\\/helix\\\/chat\\\/announcements?broadcaster_id=\\\/$secrets.ID$\\\/&moderator_id=\\\/$secrets.botID$\\\/\", \"b4\": \"response\", \"b2\": \"twitchHeader\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 18.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 67.0, \"b0\": \"Waits for the \\\"adbreakannounce\\\" variable to exist to make sure that the\\nannouncement goes out, then sets a 60-second timer (60,000 ms) to run the\\nnext set of commands.\", \"v0\": 2.0 }, { \"b1\": \"1000\", \"cmd\": 153.0, \"obsid\": \"Main\", \"pos\": 19.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"adbreakannounce\" }, { \"cmd\": 190.0, \"obsid\": \"Main\", \"pos\": 20.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"60000\" }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 21.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 126.0, \"b0\": \"Runs the commercial.\\n\\nURL: https:\\\/\\\/api.twitch.tv\\\/helix\\\/channels\\\/commercial\\nBody: {\\\"broadcaster_id\\\":\\\"\\\/$secrets.ID$\\\/\\\", \\\"length\\\":60}\\nValid Lengths: 30, 60, 90, 120, 150, 180\\n\\\"length\\\" is how long the ad will run in seconds. It must be one of the above\\nvalues, otherwise the command will fail.\", \"v0\": 1.0 }, { \"b1\": \"POST\", \"b3\": \"{\\\"broadcaster_id\\\":\\\"\\\/$secrets.ID$\\\/\\\", \\\"length\\\":60}\", \"cmd\": 169.0, \"obsid\": \"Main\", \"pos\": 22.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"https:\\\/\\\/api.twitch.tv\\\/helix\\\/channels\\\/commercial\", \"b4\": \"response\", \"b2\": \"twitchHeader\" }, { \"b1\": \"1000\", \"cmd\": 153.0, \"obsid\": \"Main\", \"pos\": 23.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"commercialresponse\" } ], \"press_type\": 0.0, \"x\": 0.20000000000000001110223024625157, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.10000000000000000555111512312578, \"button_id\": \"ID253\", \"button_duration\": 0.0, \"y\": 0.29999999999999998889776975374843, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 65.0, \"stretch\": 0.0 }, { \"color\": 5385234.0, \"persistent\": 1.0, \"text\": \"Run Commercial\\nAnnounce & Delay\\n(SAMMI)\", \"release_duration\": 0.0, \"queueable\": 0.0, \"command_list\": [ { \"cmd\": 4.0, \"obsid\": \"Main\", \"pos\": 0.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 101.0, \"b0\": \"IMPORTANT: This should be used only if you plan on running additional ads outside\\n           of scheduled Twitch ads or ads played via the Twitch Dashboard (or an\\n           OBS dock). It's NOT a replacement for the ad schedule.\\n           Running an ad via this method, can - and likely will - run an ad on top\\n           an existing ad block, causing the ad block to run longer than intended.\", \"v0\": 0.0 }, { \"cmd\": 6.0, \"obsid\": \"Main\", \"pos\": 1.0, \"vis\": 0.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 151.0, \"b0\": \"Makes an announcement in chat that a commercial will be starting soon.\\nAfter 60 seconds, attempts to begin a 60-second ad break.\\n\\nValid Lengths: 30, 60, 90, 120, 150, 180\\n\\\"length\\\" is how long the ad will run in seconds. It must be one of the above\\nvalues; otherwise the command will fail.\\n\\nThe variables are optional, but can be useful for troubleshooting.\", \"v0\": 0.0 }, { \"b1\": \"YOUR CHANNEL HERE\", \"cmd\": 241.0, \"v1\": 0.0, \"obsid\": \"Main\", \"pos\": 2.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"Ad break starting in 60 seconds!\" }, { \"cmd\": 190.0, \"obsid\": \"Main\", \"pos\": 3.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"60000\" }, { \"b1\": \"60\", \"cmd\": 266.0, \"obsid\": \"Main\", \"pos\": 4.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"YOUR CHANNEL HERE\", \"b2\": \"adbreak\" }, { \"b1\": \"1000\", \"cmd\": 153.0, \"obsid\": \"Main\", \"pos\": 5.0, \"vis\": 1.0, \"ms\": 0.0, \"sel\": 0.0, \"dis\": 0.0, \"xpan\": 0.0, \"b0\": \"adbreak\" } ], \"press_type\": 0.0, \"x\": 0.69999999999999995559107901499374, \"border\": 2.0, \"image\": \"\", \"triggers\": [ ], \"group_id\": \"\", \"overlappable\": 0.0, \"init_variable\": \"\", \"deck\": 12.0, \"width\": 0.10000000000000000555111512312578, \"button_id\": \"ID254\", \"button_duration\": 0.0, \"y\": 0.29999999999999998889776975374843, \"switch_deck\": \"\", \"height\": 0.10000000000000000555111512312578, \"release_list\": [ ], \"functions\": 65.0, \"stretch\": 0.0 } ], \"deck_name\": \"SFTL Stream Deck 1.0\", \"grid_x\": 10.0, \"stretch\": 0.0 }", "unique_id": "20221217090547994213617", "deck_verification_code": "eae1ee46762f7e97e12ee9c9a08bcdf77d46cf45", "include_image": { } }
